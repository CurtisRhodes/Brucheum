<style>

    .carouselContainer {
        padding: 1px;
        border: solid 2px #b200ff;
        /*background-color: rgba(164, 168, 169, 0.75);*/
        z-index: 10;
        display: none;
    }

    .animatedGears {
        display: none;
        position: relative;
        top: 100px;
        left: 100px;
    }

    .floatingLabel {
        position: absolute;
        display: inline-block;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 5px;
        padding: 3px;
        font-size: 22px;
        white-space: nowrap;
        cursor: pointer;
        z-index: 2;
    }

    .carouselImage {
        /*height: 500px;*/
        cursor: pointer;
    }

    .carouselImageContainer {
        border: solid 5px #efeacb;
        border-bottom: none;
        background-color: #efeacb;
    }

    .arrowButton {
        position: absolute;
        z-index: 1;
        height: 70px;
        cursor: pointer;
        display: none;
    }

    .imgBottom {
        background-color: #efeacb;
        text-align: center;
    }

    .pauseButton {
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: inline-block;
        font-size: 23px;
        color: #000;
        font-weight: bold;
        cursor: pointer;
    }

    .carouselCategoryLabel {
        float: left;
        cursor: pointer;
        text-decoration: underline;
        font-size: 20px;
        margin-bottom: 4px;
        color: #b200ff;
    }
</style>
@*categoy description*@
<style>
    .floatingCrudDialog {
        z-index: 27;
        border-radius: 22px;
        background-color: #83b1ad;
    }

    .catDescArea {
        height: 323px;
        border-radius: 22px;
        width: 434px;
        border: solid thin #b200ff;
        padding: 4px;
        margin: 3px;
    }

    .readOnlyCatDialog {
        height: 323px;
        width: 434px;
        font-size: 28px;
        font-family: 'Comic Sans MS';
        border: solid thin #b200ff;
        border-radius: 22px;
        padding: 4px;
        margin: 3px;
    }
</style>

<div class="centeredDivShell">
    <div class="centeredDivInner">
        <div id='categoryTitle' class='floatingLabel' onclick="showCategoryDialog()" onmouseover="showCategoryDialog()"></div>
        <div id="laCarousel" class="carouselContainer">
            <div class="carouselImageContainer">
                <img id="carouselImage" class="carouselImage" src="~/Images/ingranaggi3.gif" onclick="clickViewGallery()" />
                <div class="imgBottom">
                    <div id="pauseButton" class='pauseButton' onclick="togglePause()">||</div>
                    <div id='categoryLabel' class='carouselCategoryLabel' onclick="clickViewParentGallery()"></div>
                </div>
            </div>
            @*<img id="leftFbutton" class="arrowButton" src="~/Images/blueCircleLeft.png" onclick="clickPrevious()" />
                <img id="rightFbutton" class="arrowButton" src="~/Images/blueCircleRight.png" onclick="clickNext()" />*@
        </div>
    </div>
</div>


<div class="centeredDivShell">
    <div id="centeredContainer" class="centeredDivInner">
        <div id="categoryDialog" class="floatingCrudDialog categoryDialog" onmouseleave="closeCatDialog()">
            <div id="catDlgFolderName" class="center"></div>
            <textarea id="catDlgDescription" class="readOnlyCatDialog"></textarea>
            <div id="catDlgEdit" class="roundendButton inline" onclick="editCatDialog()">Edit</div>
            <div id="catDlgCancel" class="roundendButton inline" onclick="$('#categoryDialog').hide(); resume();">Cancel</div>
        </div>
    </div>
</div>



<script>
    var service = '@ViewBag.Service';
    var isPornEditor = '@ViewBag.IsPornEditor';
    var numImages = 0;
    var numFolders = 0;
    var rotationSpeed = 5123;
    var carouselItemArray = new Array();
    var imageIndex = 0;
    var carouselContainerHeight;
    var Carousel;
    var folderModel = {};

    $(document).ready(function () {
        $('#carouselImage').css("max-width", $('#middleColumn').width());
        $('#carouselImage').css("max-height", $('#middleColumn').innerHeight() - 150);

    });

    function showCategoryDialog() {
        // 11:11 2/25/19
        // create a new table (or row)
        // --alter table OggleBooble.ImageFolder add CatergoryDescription nvarchar(max)
        try {
            pause();
            $.ajax({
                type: "GET",
                url: service + "/api/CategoryFolder/Get?id=" + carouselItemArray[imageIndex].Id,
                success: function (model) {
                    //alert("categoryDialog: " + model.FolderName)

                    if (!model.FolderName.startsWith("ERROR")) {
                        folderModel.Id = model.Id;
                        folderModel.CategoryText = model.CategoryText;

                        $('#catDlgFolderName').html(model.FolderName)
                        $('#catDlgDescription').val(model.CatergoryDescription);
                        $('#categoryDialog').css("top", $('#categoryTitle').offset().top + 50);
                        $('#categoryDialog').css("left", $('#categoryTitle').offset().left + 50);
                        $('#catDlgCancel').hide();

                        if (isPornEditor == "True") {
                            $('#catDlgDescription').val(model.CatergoryDescription);
                            $('#catDlgEdit').show();
                        }
                        else {
                            $('#userCatDlgTextArea').val(model.CatergoryDescription + " read only");
                            $('#catDlgEdit').hide();
                        }
                        $('#categoryDialog').fadeIn();
                    }
                    else
                        alert("showCategoryDialog: " + model.FolderName);
                },
                error: function (jqXHR, exception) {
                    alert("showCategoryDialog XHR : " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        }
        catch (e) {
            alert("showCategoryDialog catch: " + e);
        }
    }
    function editCatDialog() {
        if ($('#catDlgEdit').html() == "Edit") {
            pause();
            $('#catDlgEdit').html("Save");
            $('#catDlgCancel').show();
        }
        else {
            folderModel.CategoryText = $('#catDlgDescription').val();

            //updateImageFolder();
            $.ajax({
                type: "PUT",
                url: service + "/api/ImageFolder/Update?field=description",
                data: folderModel,
                success: function (success) {
                    if (success == "ok") {
                        displayStatusMessage("ok", "category description updated");
                        $('#catDlgEdit').html("Edit");
                    }
                    else
                        alert("updateImageFolder: " + success);
                },
                error: function (jqXHR, exception) {
                    alert("updateImageFolder XHR : " + getXHRErrorDetails(jqXHR, exception));
                }
            })
        }
    }
    function closeCatDialog() {
        if ($('#catDlgEdit').html() == "Edit") {
            $('#categoryDialog').fadeOut();
            resume();
        }
    }

    function clickViewGallery() {
        clearInterval(Carousel);
        window.location.href = "/home/ImagePage?folder=" + carouselItemArray[imageIndex].Id;
    }

    function clickViewParentGallery() {
        window.location.href = "/home/ImagePage?folder=" + carouselItemArray[imageIndex].ParentId;
    }

    function clickPrevious() {
        //alert("clickPrevious")
        imageIndex--;
        if (imageIndex > 0)
            imageIndex--;
        else
            imageIndex = numImages;
        clearInterval(Carousel);
        rotate();
        event.stopPropagation();
        return false;
    }

    function clickNext() {
        //alert("clickNext")
        clearInterval(Carousel);
        imageIndex++;
        if (imageIndex >= numImages)
            imageIndex = 0;
        rotate();
        event.stopPropagation();
        return false;
    }

    function launchCarousel(root) {
        loadImages(root, true, 20);
    }

    function loadImages(rootFolder, isChecked, take) {
        var start = Date.now();
        var k = 0;
        var spliced = 0;
        if (isChecked === false) {
            var removedFolders = new Array();
            var newArray = new Array();
            for (idx = 0; idx < carouselItemArray.length; idx++) {
                k++;
                try {
                    if (carouselItemArray[idx].RootFolder == rootFolder) {
                        if (idx < carouselItemArray.length) {
                            if (removedFolders.find(function () { return carouselItemArray[idx].FolderName }) === undefined) {
                                alert("not found " + carouselItemArray[idx].FolderName)
                                removedFolders.push(carouselItemArray[idx].FolderName)
                            }
                        }
                        else {
                            alert("idx: " + idx + " carouselItemArray.length: " + carouselItemArray.length);
                        }
                    }
                    else
                        newArray.push(carouselItemArray[idx]);
                } catch (e) {
                    alert("idx: " + idx + " error: " + e);
                }
            }
            carouselItemArray = newArray;

            numImages = carouselItemArray.length;
            numFolders = numFolders - removedFolders.length;
            var delta = (Date.now() - start) / 1000;
            console.log("Removing links from (" + rootFolder + ") took: " + delta.toFixed(3));
            alert("loops: " + k + " spliced: " + spliced + " carouselItemArray.length: " + carouselItemArray.length + " numFolders: " + numFolders + " numImages: " + numImages);
        }
        else {
            $('#laCarousel').show();
            $.ajax({
                type: "GET",
                url: service + "/api/Carousel/GetLinks?root=" + rootFolder + "&take="+take,
                success: function (carouselInfo) {
                    if (carouselInfo.Success == "ok") {
                        $.each(carouselInfo.Links, function (idx, obj) {
                            carouselItemArray.push({
                                Id: obj.FolderId,
                                RootFolder: obj.RootFolder,
                                ParentId: obj.ParentId,
                                FolderName: obj.FolderName,
                                Link: obj.Link,
                                FolderPath: obj.FolderPath
                            });
                        });
                        if (numImages == 0) {
                            showImage();
                            rotate();
                        }
                        numImages += carouselInfo.Links.length;
                        numFolders += carouselInfo.FolderCount;
                        imageIndex = Math.floor(Math.random() * numImages);

                        var delta = (Date.now() - start) / 1000;
                        console.log("loadImages(" + rootFolder + ") take: " + take + " took: " + delta.toFixed(3));
                        if (take == 20) {
                            loadImages(rootFolder, isChecked, 1500);
                        }
                    }
                    else
                        alert("loadImages: " + carouselInfo.Success);
                },
                error: function (jqXHR, exception) {
                    alert("loadImages jqXHR : " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        }
    }

    function showImage() {
        $('#carouselImage').fadeOut(500);
        setTimeout(function () {
            $('#carouselImage').attr('src', carouselItemArray[imageIndex].Link).fadeIn(1500);
            $('#carouselImage').on('load', onImageLoaded());
            //$('#carouselImage').error(onImageNotLoaded());
        }, 500);
        $('#footerMessage').html("in " + numFolders + " galleries  " + (imageIndex + 1).toLocaleString() + " of " + numImages.toLocaleString() + " images");
    }

    function onImageLoaded() {
        if ($('#carouselImage').attr('src') == carouselItemArray[imageIndex].Link) {
            $('#categoryLabel').html(carouselItemArray[imageIndex].FolderPath);
            $('#categoryTitle').html(carouselItemArray[imageIndex].FolderName);
            resizePage();
        }
        else
            alert("not loaded");
    }
    function onImageNotLoaded() {
        alert("bk image " + carouselItemArray[imageIndex].Link+" not found")
    }

    function rotate() {
        Carousel = setInterval(function () {
            imageIndex = Math.floor(Math.random() * numImages);
            showImage();
        }, rotationSpeed);
    }

    function togglePause() {
        if ($('#pauseButton').html() == "||")
            pause();
        else
            resume();
    }

    function pause() {
        clearInterval(Carousel);
        $('#pauseButton').html(">");
    }

    function resume() {
        clearInterval(Carousel);
        startCarousel();
        $('#pauseButton').html("||");
    }

    function startCarousel() {
        showImage();
        rotate();
    }

</script>
