<script src="~/Scripts/EditorToolbar.js"></script>

<style>
    /*#addEditSkillContainer {
        width: 700px;
    }*/
    #txtSkillName {
        width: 301px;
    }
</style>
<div class="flexContainer">
    <div class="floatLeft">
        <div id="addEditSkillContainer" class="crudContainer">
            <div id="crudContainerTitle" class="crudContainerTitle">
                Add Edit Job Skills
                @*<div id="closeIcon" class="closeIcon" onclick="$('#addaJob').hide()"><img src="~/Images/powerOnOffSilver.png" height="24" /></div>*@
            </div>
            <div class="crudArea">
                <div id="errSummary" class="validationError"></div>
                <div class="crudRow">
                    <div id="errSkillName" class="validationError">Required</div>
                    <div class="crudLabel">Skill</div>
                    <input id="txtSkillName" class="roundedInput" />

                    <div id="errSkillCat" class="validationError">Select a Category</div>
                    <div class="crudLabel">Category</div>
                    <select id="ddSkillCats" class="crudDropDown"></select>
                </div>
                <div class="crudRow">
                    <div id="skillNarrativeEditor">
                        <div>@Html.Partial("_Editor") </div>
                    </div>
                </div>
                <div>
                    <button id="btnSkillAddEdit" class="roundendButton" onclick="addEditSkill()">Add</button>
                    <button id="btnSkillNew" class="roundendButton crudBtnNew" onclick="btnSkillNewToggle()">New</button>
                </div>
            </div>
        </div>
    </div>
    <div class="floatLeft">
        <div id="skillListCrudContainer" class="crudContainer">
            <div id="crudContainerTitle" class="crudContainerTitle">Job Skills</div>
            <div id="skillList" class="crudList"></div>
        </div>
    </div>
</div>

<script>
    var service = '@ViewBag.Service'
    var skillModel = new Object;

    $(document).ready(function () {
        $('#skillNarrativeEditor').summernote({
            height: 200,
            width: 400,
            codemirror: { mode: "htmlmixed", theme: "monokai" },
            toolbar: [
                ['codeview'],
                ['style', ['bold', 'italic', 'underline', 'clear']],
                //['font', ['strikethrough', 'superscript', 'subscript']],
                //['fontsize', ['fontname', 'fontsize']],
                //['insert', ['picture', 'link', 'video', 'table', 'hr']],
                //['color', ['color']]
                ['para', ['ul', 'ol', 'paragraph']],
                //['height', ['height']]
            ]
        });
        $('#skillNarrativeEditor').summernote('code', "");
    });

    function initializeSkillsDialog() {
        $('#btnSkillNew').hide();
        if ($('#ddSkillCats').html() === "") {
            loadSkillCatsDD();
            loadSkillsList();
        }
    }

    function addEditSkill() {
        if (validateSkill()) {
            //  unbind
            skillModel.Name = $('#txtSkillName').val();
            skillModel.Category = selectedRefType = $('#ddSkillCats option:selected').attr("value");
            skillModel.Narrative = $('#skillNarrativeEditor').summernote('code');
            if ($('#btnSkillAddEdit').html() == "Add") {
                insertSkill();
            }
            else {
                updateSkill();
            }
        }
    }

    function insertSkill() {
        //alert("insertSkill()")
        skillModel
        $.ajax({
            type: "POST",
            url: service + "/api/JobSkill",
            data: skillModel,
            success: function (success) {
                if (!success.startsWith("ERROR")) {
                    $('#btnSkillAddEdit').html("Edit");
                    $('#btnSkillNew').show();
                    skillModel.Id = success;
                    displayStatusMessage("ok", "Skill Added");
                    loadSkillsList();
                }
                else {
                    alert("addEditSkill: " + success)
                }
            },
            error: function (jqXHR, exception) {
                alert("addaJob post error: " + getXHRErrorDetails(jqXHR, exception));
            }
        });
    }

    function updateSkill() {
        $.ajax({
            type: "PUT",
            url: service + "/api/JobSkill",
            data: skillModel,
            success: function (success) {
                if (success == "ok") {
                    $('#btnSkillAddEdit').val("Edit");
                    displayStatusMessage("ok", "Skill Edited");
                    loadSkillsList();
                }
                else {
                    alert("Edit Skill: " + success)
                }
            },
            error: function (jqXHR, exception) {
                alert("addaJob put error: " + getXHRErrorDetails(jqXHR, exception));
            }
        });
    }

    function btnSkillNewToggle() {
        $('#btnSkillAddEdit').html("Add");
        $('#btnSkillNew').hide();
        // clear
        skillModel.Id = "";
        $('#txtSkillName').val("");
        $('#ddSkillCats').val("0");
        $('#skillNarrativeEditor').summernote('code', "");
    }

    function validateSkill() {
        $('#errSummary').hide();
        if (isNullorUndefined($('#txtSkillName').val())) {
            $('#errSkillName').show();
            return false;
        }
        $('#errSkillName').hide();

        if ($('#ddSkillCats').val() == "0") {
            $('#errSkillCat').show();
            return false;
        }
        $('#errSkillCat').hide();

        return true;
    };

    function loadSkillsList() {
        try {
            $('#loadingGif').show();
            $.ajax({
                type: "GET",
                url: service + "/api/JobSkill",
                success: function (response) {
                    if (true) {
                        $('#skillList').html("");
                        $.each(response, function (idx, obj) {
                            $('#skillList').append("<div class='crudListItem skillItem' CatId=" + obj.Category + " id=" + obj.Id + " >" + obj.CategoryDescription + " | " + obj.Name + "</div>");
                        })
                        $('#loadingGif').hide();

                        $('.skillItem').click(function () {
                            //alert("this.id" + $(this).attr("Id"));
                            loadSkillsEditor($(this).attr("id"));
                        });
                    }
                    else {
                        alert("loadSkillsList: " + success)
                    }
                },
                error: function (jqXHR, exception) {
                    alert("loadSkillsList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("get jobs CATCH: " + e)
        }
    }

    function loadSkillsEditor(Id) {
        $.ajax({
            type: "GET",
            url: service + "/api/Skill?skillId=" + Id,
            success: function (response) {
                if (!response.Name.startsWith("ERROR")) {
                    //bind
                    skillModel.Id = Id;
                    $('#ddSkillCats').val(response.Category);
                    $('#txtSkillName').val(response.Name);
                    $('#skillNarrativeEditor').summernote('code',response.Narrative);

                    $('#btnSkillAddEdit').html("Edit");
                    $('#btnSkillNew').show();
                }
                else {
                    alert("get skills: " + response.Id )
                }
            },
            error: function (jqXHR, exception) {
                alert("loadSkillsEditor xhr error: " + getXHRErrorDetails(jqXHR, exception));
            }
        });
    }

    function loadSkillCatsDD() {
        try {
            $.ajax({
                type: "GET",
                //dataType: "Json",
                url: service + "/api/JobRef/Get?refType=SKL",
                success: function (result) {
                    if (result.RefCode == "ERR") {
                        alert(result.RefDescription)
                    }
                    else {

                        $('#ddSkillCats').html("<option class= 'ddOption' value ='0'>-- select a job skill category --</option >");
                        $.each(result, function (idx, obj) {
                            $('#ddSkillCats').append("<option class='ddOption' value='" + obj.RefCode + "'>" + obj.RefDescription + "</option>");
                        });
                    }
                    //$('#ddSkillCats').change(function () {
                    //    selectedRefType = $('#ddSkillCats option:selected').attr("value")
                    //    getRefs($('#ddSkillCats option:selected').val());
                    //});

                },
                error: function (jqXHR, exception) {
                    alert("loadRefTypesDD xhr error: " + getXHRErrorDetails(jqXHR, exception));
                },
            });
        } catch (e) {
            //displayStatusMessage("error", "catch ERROR: " + e);
            alert("loadRefTypesDD catch: " + e);
        }
    }

</script>



