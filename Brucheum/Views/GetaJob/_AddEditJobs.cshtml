
<style>
    /*summernote*/
    .editorContainer {
        /*
            display: contents;
            width: 680px;
        */
        display: inline-flex;
        margin-bottom: 8px;
        margin-top: 4px;
        margin-right: 11px;
        color: #555;
        background-color: #ddd;
        border-radius: 5px;
    }
    .note-editable {
        width: 554px;
    }

    .wide {
        width: 474px;
    }

    /*default overrides*/
    .roundedInput {
        margin-bottom: 4px;
        margin-right: 11px;
        display: inline-block;
    }

    .joblistTable {
        width: 100%;
        /*border-spacing: 1px 150px;*/
    }
    .jobListTableRow {
        /*
            background-color: #74bac3;
            border: solid thin red;
        */
        height: 44px;
        cursor: pointer;
    }
        .jobListTableRow td {
            margin-top: 18px;
            /*background-color: #74bac3;*/
        }

</style>

<div class="flexContainer">
    <div class="floatLeft">
        <div id="addEditJob" class="crudContainer">
            <div id="divStatusMessage"></div>
            <div id="crudContainerTitle" class="crudContainerTitle">
                Add A Lost Job
                @*<div id="closeIcon" class="closeIcon" onclick="$('#addEditJob').hide()"><img src="~/Images/powerOnOffSilver.png" height="24" /></div>*@
            </div>
            <div class="crudArea">
                <div id="errSummary" class="validationError"></div>
                <div class="crudRow">
                    <div id="errStartMonth" class="validationError">Required</div>
                    <div class="crudLabel">Start</div>
                    <div class="crudLabel">Month</div>
                    <input id="txtStartMonth" class="roundedInput inline" />
                    <div class="crudLabel">Year </div>
                    <div id="errStartYear" class="validationError">Required</div>
                    <input id="txtStartYear" class="roundedInput inline" />
                </div>
                <div class="crudRow">
                    <div class="crudLabel">Ended</div>
                    <div class="crudLabel">Month</div>
                    <div class="inline">
                        <div id="errFiredMonth" class="validationError">Required</div>
                        <input id="txtFiredMonth" class="roundedInput" />
                    </div>
                    <div class="inline">Year </div>
                    <div class="inline">
                        <div id="errFiredYear" class="validationError">Required</div>
                        <input id="txtFiredYear" class="roundedInput" />
                    </div>
                </div>
                <div class="crudRow">
                    <div class="crudLabel">Job Title</div>
                    <div id="errJobTitle" class="validationError">Required</div>
                    <input id="txtJobTitle" class="roundedInput wide" />
                </div>
                <div class="crudRow">
                    <div class="crudLabel">Company</div>
                    <div id="errCompany" class="validationError">Required</div>
                    <input id="txtCompany" class="roundedInput wide" />
                </div>
                <div class="crudRow">
                    <div class="crudLabel">Location</div>
                    <div id="errLocation" class="validationError">Required</div>
                    <input id="txtLocation" class="roundedInput wide" />
                </div>
                <div>
                    <div class="crudLabel">Summary</div>
                </div>
                <div class="editorContainer">
                    <div>@Html.Partial("_Editor") </div>

                    @*<textarea id="txtSummary" class="crudTextArea"></textarea>*@
                </div>
                <div>
                    <button id="btnJobAddEdit" class="roundendButton" onclick="addEditJob()">Save</button>
                    <button id="btnJobNew" class="roundendButton crudBtnNew" onclick="btnJobNewToggle()">New</button>
                </div>
            </div>
        </div>
    </div>
    <div class="floatLeft">
        <div id="jobListContainer" class="crudContainer">
            <div id="JobListTitle" class="crudContainerTitle">Job List</div>
            <div id="loadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
            <div id="jobList" class="crudList"></div>
        </div>
    </div>
</div>

<script>
    var service = '@ViewBag.Service'
    var jobModel = new Object;

    $(document).ready(function () {
        $('.summernote').summernote({
            height: 250,
            codemirror: { mode: "htmlmixed", theme: "monokai" },
            toolbar: [
                ['codeview'],
                ['style', ['bold', 'italic', 'underline', 'clear']],
                //['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontname', 'fontsize']],
                //['insert', ['picture', 'link', 'video', 'table', 'hr']],
                ['color', ['color']]
                //['para', ['ul', 'ol', 'paragraph']],
                //['height', ['height']]
            ]
        });
    });

    function bindJobs(editJobModel) {
        jobModel.Id = editJobModel.Id;
        $('#txtStartMonth').val(editJobModel.StartMonth);
        $('#txtStartYear').val(editJobModel.StartYear);
        $('#txtFiredMonth').val(editJobModel.FiredMonth);
        $('#txtFiredYear').val(editJobModel.FiredYear);
        $('#txtJobTitle').val(editJobModel.JobTitle);
        $('#txtLocation').val(editJobModel.JobLocation);
        $('#txtCompany').val(editJobModel.Employer);
        $('#summernote').summernote('code', editJobModel.Summary);
        //alert("bindJobs jobModel.Summary: " + jobModel.Summary)
    }

    function unbindJobs() {
        jobModel.StartMonth = $('#txtStartMonth').val();
        jobModel.StartYear = $('#txtStartYear').val();
        jobModel.FiredMonth = $('#txtFiredMonth').val();
        jobModel.FiredYear = $('#txtFiredYear').val();
        jobModel.JobTitle = $('#txtJobTitle').val();
        jobModel.JobLocation = $('#txtLocation').val();
        jobModel.Employer = $('#txtCompany').val();
        jobModel.Summary = $('#summernote').summernote('code');
        //jobModel.Summary = beautify($('#summernote').summernote('code'));
        //alert("unbindJobs jobModel.Summary: " + jobModel.Summary)
    }

    function addEditJob() {
        if (validate()) {
            unbindJobs();
            if ($('#btnJobAddEdit').html() == "Save") {
                $.ajax({
                    type: "POST",
                    url: service + "/api/Job",
                    data: jobModel,
                    success: function (success) {
                        if (!success.startsWith("ERROR")) {
                            $('#btnJobAddEdit').html("Edit");
                            $('#btnJobNew').show();
                            jobModel.JobId = success;
                            displayStatusMessage("severityOk", "Job Added");
                            getJobs();
                        }
                        else {
                            alert("addEditJob: " + success)
                        }
                    },
                    error: function (jqXHR, exception) {
                        alert("addEditJob post error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            }
            else {
                $.ajax({
                    type: "PUT",
                    url: service + "/api/Job",
                    data: jobModel,
                    success: function (success) {
                        if (success == "ok") {
                            $('#btnJobAddEdit').val("Edit");
                            displayStatusMessage("severityOk", "Job Edited");
                        }
                        else {
                            alert("Edit aJob: " + success)
                        }
                    },
                    error: function (jqXHR, exception) {
                        alert("addEditJob put error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            }
        }
    }

    function btnJobNewToggle() {
        $('#jobAddEdit').html("Save");
        $('#btnJobNew').hide();
        // clear
        jobModel.JobId = "";
        $('#txtStartMonth').val("");
        $('#txtStartYear').val("");
        $('#txtFiredMonth').val("");
        $('#txtFiredYear').val("");
        $('#txtJobTitle').val("");
        $('#txtLocation').val("");
        $('#txtCompany').val("");
        $('#txtSummary').val("");
    }

    function validate() {
        $('#errSummary').hide();

        if ($('#txtStartMonth').val() === "") {
            $('#errStartMonth').show();
            return false;
        }
        $('#errStartMonth').hide();

        if ($('#txtStartYear').val() === "") {
            $('#errStartYear').show();
            return false;
        }
        $('#errStartYear').hide();

        if ($('#txtFiredMonth').val() === "") {
            $('#errFiredMonth').show();
            return false;
        }
        $('#errFiredMonth').hide();

        if ($('#txtFiredYear').val() === "") {
            $('#errFiredYear').show();
            return false;
        }
        $('#errFiredYear').hide();

        //    <div id="err" class="validationError">Required</div>
        if ($('#txtJobTitle').val() === "") {
            $('#errJobTitle').show();
            return false;
        }
        $('#errJobTitle').hide();

        if ($('#txtCompany').val() === "") {
            $('#errCompany').show();
            return false;
        }
        $('#errCompany').hide();

        if ($('#txtLocation').val() === "") {
            $('#errLocation').show();
            return false;
        }
        $('#errLocation').hide();

        //if ($('#txt').val() === "") {
        //    $('#err').show();
        //    return false;
        //}
        //$('#err').hide();

        return true;
    };

    function getJobs() {
        try {
            $('#loadingGif').show();

            $.ajax({
                type: "GET",
                url: service + "/api/Job",
                success: function (response) {
                    if (true) {
                        var sstring = "<table style='border-spacing: 5px 100px' class='joblistTable'><tbody>";
                        $.each(response, function (idx, obj) {
                            sstring += "<tr class='jobListTableRow' id=" + obj.Id + "><td>" + obj.StartMonth + "</td><td>" + obj.StartYear + "</td><td>" +
                                obj.Employer + "</td><td>" + obj.JobLocation + "</td></tr>";
                        })
                        sstring += "</tbody></table>";
                        $('#jobList').html(sstring);
                        $('#loadingGif').hide();
                        $('#jobList tr').click(function () {
                            //alert("this.id" + $(this).attr("id"));
                            loadJobsEditor($(this).attr("id"));
                        });
                    }
                    else {
                        alert("getjobs: " + success)
                    }
                },
                error: function (jqXHR, exception) {
                    alert("addEditJob XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("get jobs CATCH: " + e)
        }
    }

    function loadJobsEditor(Id) {
        $.ajax({
            type: "GET",
            url: service + "/api/Job?jobId=" + Id,
            success: function (response) {
                if (!response.Summary.startsWith("ERROR")) {
                    bindJobs(response);
                    $('#btnJobAddEdit').html("Edit");
                    $('#btnJobNew').show();
                }
                else {
                    alert("getjobs: " + response.Id )
                }
            },
            error: function (jqXHR, exception) {
                alert("addEditJob post error: " + getXHRErrorDetails(jqXHR, exception));
            }
        });
    }

</script>


