@{
    ViewBag.Title = "Blog";
}
<script src="~/Scripts/EditorToolbar.js"></script>
<link href="~/Styles/default.css" rel="stylesheet" />
<link href="~/Styles/CrudEdit.css" rel="stylesheet" />

<style>

    /*.note-editable {
        white-space: normal;
    }*/

    .threeColumnArray {
        background-color: #222730; /* #273235; #486167;*/
    }

    .blockDisplayArea {
        margin-top: 55px;
        width: 1400px;
        height: 666px;
        border: solid thin red;
    }

    .blockContainer {
        vertical-align: top;
        display: inline-block;
        height: 150px;
        width: 150px;
        padding: 4px;
        margin: 5px;
        /*background-color: #74bac3;*/
        cursor: pointer;
    }

    #txtBlogEntryTitle {
        width: 90%;
    }

    .blogSpaSection {
        display: none;
    }

    .crudContainer {
        margin-bottom: 24px;
    }

    .blockContainerBlogName {
        background-color: #decf78;
        margin-bottom: 12px;
    }


    .blogViewBlogName {
        color: #fff;
        font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        padding-top:4px;
        /*background-color: rgba(128, 128, 128, 0.47);
        border: solid thin #333;
        border-radius: 4px;*/
    }

    .blogViewTitle {
        text-align: center;
        color: #fff;
        font-size: 22px;
        margin-bottom: 8px;
    }

    #blogReadOnlyViewSummary {
        border: solid thin #333;
        font-size: 15px;
        height: 111px;
        overflow-y: auto;
        padding: 4px;
        background-color: #ddd;
    }

    .blogViewContent {
        margin-top: 8px;
        border: solid thin #333;
        font-size: 15px;
        font-family: serif;
        height: 400px;
        display: block;
        overflow-y: auto;
        padding: 4px;
        background-color: #eee;
        margin-bottom: 4px;
    }
    blogEntrySpinnerOffset {
        top: 1px;
        left: 1px;
    }

</style>

<div class="threeColumnArray">
    <div id="leftColumn">
        @*
            <div class="vertMenu">
            <div class="vertMenuTab" onclick="showSpaSection('blockDisplayArea')">View Blog</div>
            <div class="vertMenuTab" onclick="showSpaSection('blogEntryAddEdit')">Blog Entry</div>
                <div class="vertMenuTab" onclick="showSpaSection('listItemAddEdit')">To Do</div>
                <div class="vertMenuTab" onclick="showSpaSection('listHeaderAddEdit')">New List</div>
                <div class="vertMenuTab" onclick="showSpaSection('blogHeaderAddEdit')">New Blog</div>
            </div>
        *@
    </div>

    <div id="middleColumn">
        <div id="blockLoadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
        <div id="blockDisplayArea" class="blogSpaSection"></div>

        <div id="blogReadOnlyView" class="blogSpaSection">
            <div id="blogReadOnlyViewBlogName" class="blogViewBlogName"></div>
            <div id="blogReadOnlyViewTitle" class="blogViewTitle"></div>
            <div id="blogEntryReadOnlyViewLoadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
            <div id="blogReadOnlyViewSummary"></div>
            <div id="blogReadOnlyViewContent" class="blogViewContent"></div>
            <button class="roundendButton" onclick="showEditorFromReadOnlyView()">Edit</button>
        </div>

        <div id="blogHeaderAddEdit" class="blogSpaSection">
            <div class="flexContainer">
                <div class="floatLeft">
                    <div class="crudContainer">
                        <div id="crudContainerTitle" class="crudContainerTitle">Blog</div>
                        <div class="crudRow">
                            <div class="crudRowLabel">Blog Name</div>
                            <div id="errBlogName" class="validationError">Required</div>
                            <input id="txtBlogName" class="roundedInput" />
                            <div class="crudRowLabel inline">Color</div>
                            <input id="txtblogColor" class="roundedInput inline" />
                        </div>
                        <div class="crudButtonRow">
                            <button id="btnBlogAddEdit" class="roundendButton" onclick="addEditBlogHeader()">Add</button>
                            <button id="btnBlogNew" class="roundendButton" onclick="toggleBlogHeaderEdit()">New</button>
                        </div>
                    </div>
                </div>
                <div class="floatLeft">
                    <div class="crudContainer">
                        <div class="crudContainerTitle">Blogs</div>
                        <div id="blogLoadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
                        <div id="blogList" class="crudList"></div>
                    </div>
                </div>
            </div>
        </div>

        <div id="blogEntryAddEdit" class="blogSpaSection">
            <div class="flexContainer">
                <div class="floatLeft">
                    <div class="crudContainer">
                        <div id="crudContainerTitle" class="crudContainerTitle">Blog Entry</div>
                        <div class="crudRow">
                            <div class="crudRowLabel">Current Blog</div>
                            <select id="ddBlogEntryParentBlogs" class="roundedInput" onchange="currentBlogEntryParentBlogddChange()"></select>
                        </div>
                        <div class="crudRow">
                            <div class="crudRowLabel">Title</div>
                            <div id="errBlogTitle" class="validationError">Required</div>
                            <input id="txtBlogEntryTitle" class="roundedInput" />
                        </div>
                        <div class="crudRow">
                            <div class="crudRowLabel">Summary</div>
                            <div id="blogSummaryEditor"></div>
                        </div>
                        <div class="crudRow">
                            <div class="crudRowLabel">Content</div>
                            <div id="blogContentEditor"></div>
                        </div>
                        <div id="divStatusMessage"></div>
                        <div class="crudButtonRow">
                            <img id="blogEntryAddEditSpinner" class="btnSpinnerImage blogEntrySpinnerOffset" src="~/Images/loader.gif" />
                            <button id="btnBlogEntryAddEdit" class="roundendButton" onclick="addEditBlogEntry()">Add</button>
                            <button id="btnBlogEntryNew" class="roundendButton" onclick="toggleBlogEntryEdit()">New</button>
                            <button class="roundendButton floatRight" onclick="showSpaSection('blogHeaderAddEdit')">New Blog</button>
                        </div>
                    </div>
                </div>
                <div class="floatLeft">
                    <div class="crudContainer">
                        <div id="blogEditorEntriesListTitle" class="crudContainerTitle">Blog Entries</div>
                        <div id="blogEntryLoadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
                        <div id="blogEntryList" class="crudList"></div>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div id="rightColumn">
        <div class="rightColumnContents">
            @if (User.IsInRole("Admin"))
            {
                <div><div class="adminButton" onclick="showBlogEditor()">manage</div></div>
            }
        </div>
    </div>
</div>

<script>
    var service = '@ViewBag.Service';
    var currentUser = '@ViewBag.UserId';
    var blogModel = {};
    var blogEntryModel = {};

    $(document).ready(function () {
        setLayout("Intelligent Design");

        loadBlocksDisplay();
        $('#blockDisplayArea').show()

        //$('#footerMessage').append("  service: " + service);
        $('#blogSummaryEditor').summernote({
            height: 120,
            width: 900,
            codemirror: { lineWrapping: true, mode: "htmlmixed", theme: "cobalt" },
            toolbar: [
                ['codeview'],
                ['font style', ['fontname', 'fontsize', 'color', 'bold', 'italic', 'underline']]
            ]
        });
        $('#blogContentEditor').summernote({
            height: 220,
            width: 900,
            codemirror: { lineWrapping: true, mode: "htmlmixed", theme: "cobalt" },
            toolbar: [
                ['codeview'],
                ['font style', ['fontname', 'fontsize', 'color', 'bold', 'italic', 'underline']]
            ]
        });
        $('.note-resizebar').mouseup(function () {
            $('#middleColumn').height($('#blogEntryAddEdit').height() + 10);
            resizePage();
        });
    });


    function showBlogEditor() {
        toggleBlogEntryEdit();
        $('#blogEntryAddEdit').show();
        if (isNullorUndefined($('#ddBlogEntryParentBlogs').html()))
            loadBlogEntryBlogsDD();
    }

    function loadBlocksDisplay() {
        $('#blockLoadingGif').show();
        try {
            $.ajax({
                type: "GET",
                url: service + "/api/BlogEntry",
                success: function (response) {
                    $('#blockDisplayArea').html("");
                    $.each(response, function (idx, obj) {

                        $('#blockDisplayArea').append("<div id=" + obj.Id + " blogId=" + obj.BlogId + " class='blockContainer' style='background-color:" +
                            obj.Color + "'><div class='blockContainerBlogName'>" + obj.BlogName + "</div><div class='blockContainerBlogTitle'>" + obj.Title + "</div></div>");

                    })
                    $('.blockContainer').click(function () {

                        loadBlogViewFromBlocDisplay($(this).attr("id"), $(this).attr("blogId"));
                    });
                    $('#blockLoadingGif').hide();
                },
                error: function (jqXHR, exception) {
                    $('#blockLoadingGif').hide();
                    alert("loadBlocksDisplay XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            $('#blockLoadingGif').hide();
            alert("loadBlocksDisplay CATCH: " + e)
        }
    }
    function loadBlogViewFromBlocDisplay(id, blogId ) {
        try {
            blogEntryModel.Id = id;
            blogEntryModel.BlogId = blogId;

            if (isNullorUndefined($('#ddBlogEntryParentBlogs').html()))
                loadBlogEntryBlogsDD();

            $('#blogEntryReadOnlyViewLoadingGif').show();
            $.ajax({
                type: "GET",
                url: service + "/api/BlogEntry/GetOne?Id=" + id,
                success: function (response) {
                    if (!response.Title.startsWith("ERROR")) {
                        $('#blogReadOnlyViewBlogName').html(response.BlogName);
                        $('#blogReadOnlyViewTitle').html(response.Title);
                        $('#blogReadOnlyViewSummary').html(response.Summary);
                        $('#blogReadOnlyViewContent').html(response.Content);

                        $('#blogEntryReadOnlyViewLoadingGif').hide();
                        $('.blogSpaSection').hide();
                        $('#blogReadOnlyView').show();
                    }
                    else {
                        $('#blogEntryReadOnlyViewLoadingGif').hide();
                        alert("loadblogReadOnlyView: " + success)
                    }
                },
                error: function (jqXHR, exception) {
                    $('#blogEntryReadOnlyViewLoadingGif').hide();
                    alert("loadblogReadOnlyView XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            $('#blogEntryReadOnlyViewLoadingGif').hide();
            alert("get loadblogReadOnlyView CATCH: " + e)
        }
    }

    function showEditorFromReadOnlyView() {
        $('.blogSpaSection').hide();
        loadBlogEntryEditor(blogEntryModel.Id);
        $('#blogEntryAddEdit').fadeIn();
    }

    function toggleBlogHeaderEdit() {
        $('#btnBlogNew').hide();
        $('#btnBlogAddEdit').html("Add");
        $('#txtBlogName').val("");
    }
    function addEditBlogHeader() {
        // bind
        blogModel.Name = $('#txtBlogName').val();
        blogModel.Color = $('#txtblogColor').val();
        blogModel.Owner = currentUser;

        if ($('#btnBlogAddEdit').html() == "Add") {
            $.ajax({
                type: "POST",
                url: service + "/api/Blog",
                data: blogModel,
                success: function (response) {
                    if (!response.startsWith("ERROR")) {
                        $('#btnBlogAddEdit').html("Update");
                        $('#btnBlogNew').show();
                        blogModel.Id = response;
                        loadBlogHeaderList();
                    }
                    else
                        alert("AddEditBlog POST: " + response);
                },
                error: function (jqXHR, exception) {
                    alert("AddEditBlog POST xhr error: " + getXHRErrorDetails(jqXHR, exception));
                }
            })
        }
        if ($('#btnBlogAddEdit').html() == "Update") {
            $.ajax({
                type: "PUT",
                url: service + "/api/Blog",
                data: blogModel,
                success: function (success) {
                    if (success == "ok") {
                        loadBlogHeaderList();
                    }
                    else
                        alert("AddEditBlog PUT: " + response);
                },
                error: function (jqXHR, exception) {
                    alert("AddEditBlog PUT xhr error: " + getXHRErrorDetails(jqXHR, exception));
                }
            })
        }
    }
    function loadBlogHeaderList() {
        try {
            $('#blogLoadingGif').show();
            $.ajax({
                type: "GET",
                url: service + "/api/Blog",
                success: function (response) {
                    $('#blogList').html("<option class='ddOption' value='0'>-- select blog --</option>");
                    if (true) {
                        $.each(response, function (idx, obj) {
                            $('#blogList').append("<div class='crudListItem blogListItem' id='" + obj.Id + "' name='" + obj.Name + "' color=" + obj.Color + " >" + obj.Name + "</div>");
                        })

                        $('.blogListItem').click(function () {
                            blogModel.Id = $(this).attr("id");
                            $('#txtBlogName').val($(this).attr("name"));
                            $('#txtblogColor').val($(this).attr("color"));
                            $('#btnBlogAddEdit').html("Update");
                            $('#btnBlogNew').show();
                        });
                        $('#blogLoadingGif').hide();
                    }
                    else {
                        $('#blogLoadingGif').hide();
                        alert("getBlogList: " + success)
                    }
                },
                error: function (jqXHR, exception) {
                    $('#blogLoadingGif').hide();
                    alert("getBlogList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            $('#blogLoadingGif').hide();
            alert("get BlogList CATCH: " + e)
        }
    }

    function loadBlogEntryBlogsDD() {
        try {
            $('#blogLoadingGif').show();
            $.ajax({
                type: "GET",
                url: service + "/api/Blog",
                success: function (response) {
                    $('#ddBlogEntryParentBlogs').html("<option class='ddOption' value='0'>-- select blog --</option>");
                    if (true) {
                        $.each(response, function (idx, obj) {
                            $('#ddBlogEntryParentBlogs').append("<option class='ddOption logEntryParentBlog' value='" + obj.Id + "'>" + obj.Name + "</option>");
                        })

                        //$('.logEntryParentBlog').click(function () {
                        //    //alert("this.id: " + $(this).attr("id"));
                        //    blogEntryModel.BlogId = $('#ddBlogEntryParentBlogs').val();
                        //}

                        $('#blogLoadingGif').hide();
                    }
                    else {
                        $('#blogLoadingGif').hide();
                        alert("loadBlogEntryBlogsDD: " + success)
                    }
                },
                error: function (jqXHR, exception) {
                    $('#blogLoadingGif').hide();
                    alert("loadBlogEntryBlogsDD XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            $('#blogLoadingGif').hide();
            alert("get loadBlogEntryBlogsDD CATCH: " + e)
        }
    }
    function toggleBlogEntryEdit() {
        $('#btnBlogEntryNew').hide();
        $('#btnBlogEntryAddEdit').html("Add");
        //clear gets
        $('#txtBlogEntryTitle').val("");
        $('#blogSummaryEditor').summernote('code', "");
        $('#blogContentEditor').summernote('code', "");
        //$('#txtBlogEntryContent').jqteVal('');
    }
    function addEditBlogEntry() {
        $('#blogEntryAddEditSpinner').show();
        //bind
        blogEntryModel.BlogId = $('#ddBlogEntryParentBlogs').val();
        blogEntryModel.Title = $('#txtBlogEntryTitle').val();
        blogEntryModel.Summary = $('#blogSummaryEditor').summernote('code');
        blogEntryModel.Content = $('#blogContentEditor').summernote('code');
        //blogEntryModel.Content = $('#txtBlogEntryContent').jqteVal();

        if ($('#btnBlogEntryAddEdit').html() == "Add") {
            $.ajax({
                type: "POST",
                url: service + "/api/BlogEntry",
                data: blogEntryModel,
                success: function (response) {
                    $('#blogEntryAddEditSpinner').hide();
                    if (!response.startsWith("ERROR")) {
                        displayStatusMessage("ok", "blog entry added");
                        $('#btnBlogEntryAddEdit').html("Update");
                        $('#btnBlogEntryNew').show();
                        blogEntryModel.Id = response;
                        loadBlogEntryList();
                    }
                    else
                        alert("AddEditBlog POST: " + response);
                },
                error: function (jqXHR, exception) {
                    $('#blogEntryAddEditSpinner').hide();
                    alert("AddEditBlog POST xhr error: " + getXHRErrorDetails(jqXHR, exception));
                }
            })
        }
        if ($('#btnBlogEntryAddEdit').html() == "Update") {
            $.ajax({
                type: "PUT",
                url: service + "/api/BlogEntry",
                data: blogEntryModel,
                success: function (success) {
                    $('#blogEntryAddEditSpinner').hide();
                    if (success == "ok") {
                        displayStatusMessage("ok", "blog entry saved");
                        loadBlogEntryList();
                    }
                    else
                        alert("AddEditBlogEntry PUT: " + success);
                },
                error: function (jqXHR, exception) {
                    $('#blogEntryAddEditSpinner').hide();
                    alert("AddEditBlogEntry PUT xhr error: " + getXHRErrorDetails(jqXHR, exception));
                }
            })
        }
    }
    function currentBlogEntryParentBlogddChange() {
        blogEntryModel.BlogId = $('#ddBlogEntryParentBlogs option:selected').val();
        $('#blogEditorEntriesListTitle').html($('#ddBlogEntryParentBlogs option:selected').text() + " Blog Entries");
        loadBlogEntryList();
        toggleBlogEntryEdit();
    }
    function loadBlogEntryList() {
        try {
            $('#blogEntryLoadingGif').show();
            $.ajax({
                type: "GET",
                url: service + "/api/BlogEntry/GetMany?blogId=" + blogEntryModel.BlogId + "&kludge=kludge",
                success: function (response) {
                    $('#blogEntryList').html("");
                    if (response.length == 0) {
                        $('#blogEntryLoadingGif').hide();
                        $('#blogEntryList').append("<div class='crudListItem'>no items yet</div>");
                    }
                    else {
                        if (!response[0].Title.startsWith("Error")) {
                            $.each(response, function (idx, obj) {
                                $('#blogEntryList').append("<div class='crudListItem blogEntryListItem' id='" + obj.Id + "'>" + obj.Title + "</div>");
                            })
                            $('.blogEntryListItem').click(function () {
                                loadBlogEntryEditor($(this).attr("id"))
                            });
                            $('#blogEntryLoadingGif').hide();
                        }
                        else {
                            $('#blogEntryLoadingGif').hide();
                            alert("loadBlogEntryList: " + success)
                        }
                    }
                },
                error: function (jqXHR, exception) {
                    $('#blogEntryLoadingGif').hide();
                    alert("loadBlogEntryList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            $('#blogEntryLoadingGif').hide();
            alert("get BlogList CATCH: " + e)
        }
    }
    function loadBlogEntryEditor(id) {
        try {
            $('#blogEntryLoadingGif').show();
            $.ajax({
                type: "GET",
                url: service + "/api/BlogEntry/GetOne?Id=" + id,
                success: function (response) {
                    if (!response.Title.startsWith("ERROR")) {
                        blogEntryModel.Id = id;
                        blogEntryModel.BlogId = response.BlogId;

                        $('#ddBlogEntryParentBlogs').val(response.BlogId);
                        //alert("00  $('#ddBlogEntryParentBlogs').val(): " + $('#ddBlogEntryParentBlogs').val)

                        $('#txtBlogEntryTitle').val(response.Title);
                        $('#blogSummaryEditor').summernote('code', response.Summary);
                        $('#blogContentEditor').summernote('code', response.Content);

                        $('#btnBlogEntryAddEdit').html("Update");
                        $('#btnBlogEntryNew').show();
                        $('#blogEntryLoadingGif').hide();

                        $('#blogEditorEntriesListTitle').html($('#ddBlogEntryParentBlogs option:selected').text() + " Blog Entries");
                        loadBlogEntryList();
                    }
                    else {
                        $('#blogEntryLoadingGif').hide();
                        alert("getBlogList: " + success)
                    }
                },
                error: function (jqXHR, exception) {
                    $('#blogEntryLoadingGif').hide();
                    alert("getBlogList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            $('#blogEntryLoadingGif').hide();
            alert("get BlogList CATCH: " + e)
        }
    }

</script>


