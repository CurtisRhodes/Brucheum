@{
    ViewBag.Title = "Write";
}
<script src="~/Scripts/EditorToolbar.js"></script>
<link href="~/Styles/crudEdit.css" rel="stylesheet" />
<link href="~/Styles/tableofContents.css" rel="stylesheet" />

<style>
    .crudContainer {
        width: 100%;
    }

    .writeRow {
        margin: 5px;
        /*
            margin-top: 10px;
            padding: 0 22px;
            white-space: nowrap;

        */
        display: none;
    }

    .chapterNumberSize {
        width: 50px;
    }

    #txtSectionTitle {
        width: 70%;
        margin-bottom: 14px;
    }

    .nestedList {
        max-height: 350px;
        overflow-y: auto;
    }

    #sectionList {
        margin-top: 14px;
    }

    #subSectionRow {
        display: none;
        padding-bottom: 14px;
    }

    .threeColumnArray {
        /*background-image: url('../../Images/parchment01.jpg');
        background-repeat: no-repeat;
        background-size: 100%;*/
        background-color: #ddd69f;
    }

    .bookAddUpdateSpinnerOffset {
        top: 10px;
        left: 30px;
    }

    .nestedListItem {
        padding: 4px;
        cursor: pointer;
        margin-bottom: 5px;
        background-color: #74bac3;
        border-radius: 5px;
        /*float: left;*/
        white-space: nowrap;
    }

    .nestedListBookItem {
        font-weight: bold;
        padding-left: 4px;
    }

    .nestedListChapterItem {
        padding-left: 8px;
    }

    .nestedListSectionItem {
        padding-left: 50px;
    }

    .nestedListSubSectionItem {
        padding-left: 100px;
    }

    .caret12 {
        height: 12px;
    }

    .dots95 {
        float: left;
        border-bottom: dotted 5px #214c87;
        width: 95%;
    }
</style>

<div class="threeColumnArray">
    <div id="leftColumn"></div>
    <div id="middleColumn">
        <div id="bookTitle" class="pageTitle" onclick="redirectToToC()"></div>
        @*<a class="crudBreadcrumb" href="javascript:redirectToToC()">&#8592;</a>*@
        <div class="crudContainer floatLeft">
            <div id="crudTopBorderHeader" class="crudContainerTitle"></div>
            <div id="sectionsCrudArea" class="crudArea">

                <div id="bookRow" class="writeRow">
                    <div class="crudRowLabel">Book Title</div>
                    <input id="txtBookTitle" class="roundedInput width60percent" />
                    <div>
                        <div class="crudRowLabel"></div>
                        <input id="radioIntro" type="radio" class="bookRadioButtons" onclick="toggleBookRadioButtons('Introduction')" checked="checked">  Introduction
                        <input id="radioPreface" type="radio" class="bookRadioButtons" onclick="toggleBookRadioButtons('Preface')">  Preface
                    </div>
                </div>

                <div id="chapterRow" class="writeRow">
                    <div class="crudRowLabel">Chapter Number</div>
                    <input id="txtChapterOrder" class="roundedInput chapterNumberSize" />
                    <div class="crudRowLabel">Chapter Title</div>
                    <input id="txtChapterTitle" class="roundedInput width60percent" />
                    <div class="crudLabel">Preface</div>
                </div>

                <div id="sectionRow" class="writeRow">
                    <div class="crudRowLabel">Section Number</div>
                    <input id="txtSectionOrder" class="roundedInput chapterNumberSize" />
                    <div class="crudRowLabel">Section Title</div>
                    <input id="txtSectionTitle" class="roundedInput width60percent" />
                </div>

                <div id="subSectionRow" class="writeRow">
                    <div class="crudRowLabel">SubSection Number</div>
                    <input id="txtSubSectionOrder" class="roundedInput chapterNumberSize" />
                    <div class="crudRowLabel">SubSection Title</div>
                    <input id="txtSubSectionTitle" class="roundedInput width60percent" />
                </div>

                <div id="sectionEditor"></div>
                <div id="divStatusMessage"></div>

                <div>
                    <img id="bookAddUpdateSpinner" class="btnSpinnerImage bookAddUpdateSpinnerOffset" src="~/Images/loader.gif" />

                    <button id="btnAddUpdateBook" class="roundendButton allBookButtons" onclick="addUpdateBook()">Add</button>
                    <button id="btnNewBook" class="roundendButton allBookButtons" onclick="toggleNewBook()">New Book</button>

                    <button id="btnAddUpdateChapter" class="roundendButton allBookButtons" onclick="addUpdateChapter()">Add</button>
                    <button id="btnNewChapter" class="roundendButton allBookButtons" onclick="toggleNewChapter()">New Chapter</button>

                    <button id="btnAddUpdateSection" class="roundendButton allBookButtons" onclick="addUpdateSection()">Add</button>
                    <button id="btnNewSection" class="roundendButton allBookButtons" onclick="toggleNewSection()">New Section</button>

                    <button id="btnAddUpdateSubSection" class="roundendButton allBookButtons" onclick="addUpdateSubSection()">New Subsection</button>
                    <button id="btnNewSubSection" class="roundendButton allBookButtons" onclick="toggleNewSubSection()">New Subsection</button>

                </div>
                <div>
                    <div id="writeSectionsListLoadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
                    <div id="nestedBookChaptersList" class="crudList nestedList"></div>
                </div>
            </div>
        </div>
    </div>
    <div id="rightColumn"></div>
</div>

<script>
/// ready fire aim
/// set up an editor screen for sections and subsections
/// you have already picked the chapter -- or this could be a drop down
///  combining write and edit pages
///
///
    var service = '@ViewBag.Service';
    var currentUser = '@ViewBag.UserId';
    var bookId = '@ViewBag.BookId';
    var bookModel = {};
    var sectionModel = {};
    var chapterModel = {};
    var subSectionModel = {};

    $(document).ready(function () {
        if (isNullorUndefined(bookId)) {
            window.location.href = "/BookDb"
        }
        $('.allBookButtons').hide();
        $('#sectionEditor').summernote({
            height: 222,
            codemirror: { lineWrapping: true, mode: "htmlmixed", theme: "cobalt" },
            toolbar: [
                ['codeview'],
                ['font style', ['fontname', 'fontsize', 'color', 'bold', 'italic', 'underline']],
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['insert', ['picture', 'link', 'video', 'table', 'hr']],
                ['para', ['ul', 'ol', 'paragraph']]
            ]
        });
        setStyle();
        loadNestedList();

        $('.note-resizebar').mouseup(function () {
            if (($('#sectionsCrudArea').height() + 50) > $('#middleColumn').height()) {
               // alert("$('#sectionsCrudArea').height(): " + $('#sectionsCrudArea').height() + "  $('#middleColumn').height(): " + $('#middleColumn').height())
                $('#middleColumn').height($('#sectionsCrudArea').height() + 100);
                resizePage();
            }
        });
    })

    function setStyle() {
        switch (bookId) {
            case '1':  // the blond jew
                break;
            case '2':  // time squared
                $('.threeColumnArray').css('background-image', 'url("/Images/Books/timeSquared01.jpg")')
                $('#bookTitle').css('color', '#fff');
                break;
            case '3':  // ready;fire;aim;
                $('.threeColumnArray').css('background-color', '#98d1d3')
                break;
            default:
        }
    }


    function loadBookDetails() {
        $('#radioIntro').prop('checked', true);
        $('#radioPreface').prop('checked', false);
        $('#sectionEditor').summernote('code', bookModel.Introduction);

        $('#txtBookTitle').val(bookModel.BookTitle);

        $('.allBookButtons').hide();
        $('#btnAddUpdateBook').show().html("Update");
        //$('#btnNewBook').show();
        $('#btnNewChapter').show();

        $('.writeRow').hide();
        $('#bookRow').show();
    }
    function toggleNewBook() {
        $('.allBookButtons').hide();
        $('#btnAddUpdateBook').show().html("Add");
        // clear gets
        $('#txtBookTitle').val("");
        bookModel.Introduction = "";
        bookModel.Preface = "";
        $('#sectionEditor').summernote('code', "");
    }
    function toggleBookRadioButtons(checked) {

        //alert("checked: " + checked)

        if (checked == "Preface") {
            bookModel.Introduction = $('#sectionEditor').summernote('code');
            $('#sectionEditor').summernote('code', bookModel.Preface);
            $('#radioIntro').prop('checked', false);
        }
        if (checked == "Introduction") {
            bookModel.Preface = $('#sectionEditor').summernote('code');
            $('#sectionEditor').summernote('code', bookModel.Introduction);
            $('#radioPreface').prop('checked', false);
        }
    }
    function addUpdateBook() {
        bookModel.BookTitle = $('#txtBookTitle').val();
        bookModel.Author = currentUser;

        if ($('#radioIntro').prop('checked')) {
            bookModel.Introduction = $('#sectionEditor').summernote('code');
        }
        if ($('#radioPreface').prop('checked')) {
            bookModel.Preface = $('#sectionEditor').summernote('code');
        }

        if ($('#btnAddUpdateBook').html() == "Add") {
            //alert("add new book")
            try {
                $.ajax({
                    type: "POST",
                    url: service + "/api/BookDb",
                    data: bookModel,
                    success: function (result) {
                        if (result == "ok") {
                            bookModel.Id = result.Id; // $('#hiddenId').val();
                            loadNestedList();
                            $('.allBookButtons').hide();
                            $('#btnAddUpdateBook').show().html("Update");
                            //$('#btnNewBook').show();
                            //alert("bookModel.Id: " + bookModel.Id)
                            displayStatusMessage("ok", " A New Book " + bookModel.BookTitle + " Added");
                        }
                        else {
                            displayStatusMessage("error", "ADD New Book: " + result);
                            alert("Add New Book : " + result);
                        }
                    },
                    error: function (xhr) {
                        //displayStatusMessage("error","ADD New Book " + xhr.statusText);
                        alert("Post book XHR error: " + xhr.statusText);
                    }
                });
            } catch (e) {
                displayStatusMessage("error", "ADD New Book catch: " + e);
                alert("ADD New Book catch: " + e);
            }
        }
        if ($('#btnAddUpdateBook').html() == "Update") {
            try {
                $.ajax({
                    type: "PUT",
                    url: service + "/api/BookDb",
                    data: bookModel,
                    success: function (result) {
                        if (result === "ok") {
                            //$('.allBookButtons').hide();
                            //$('#btnAddUpdateChapter').html("Update").show();
                            //$('#btnNewChapter').show();
                            loadNestedList();
                            displayStatusMessage("ok", bookModel.BookTitle + " updated");
                        }
                        else {
                            alert("update book: " + result)
                            displayStatusMessage("error", "update book " + result);
                        }
                    },
                    error: function (jqXHR, exception) {
                        alert("POST book  XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            } catch (e) {
                alert("update book ctch : " + e);
                displayStatusMessage("error", "update book Catch: " + e);
            }

        }
}

    function loadChapterDetails(chapterId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/Chapter/?chapterId=" + chapterId,
                success: function (chapter) {
                    if (chapter.success == "ok") {
                        $('#crudTopBorderHeader').html("Chapter " + chapter.ChapterOrder + ".    " + chapter.ChapterTitle);
                        chapterModel.Id = chapterId;

                        $('#txtChapterOrder').val(chapter.ChapterOrder)
                        $('#txtChapterTitle').val(chapter.ChapterTitle)
                        $('#sectionEditor').summernote('code', chapter.Preface);

                        $('.writeRow').hide();
                        $('#chapterRow').show();

                        $('.allBookButtons').hide();
                        $('#btnAddUpdateChapter').html("Update").show();
                        $('#btnNewChapter').show();
                        sectionModel.ChapterId = chapterId;
                        $('#btnNewSection').show();
                    }
                    else
                        alert("getChapter: " + chapter.success)
                },
                error: function (jqXHR, exception) {
                    alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("getChapter CATCH: " + e);
        }
    }
    function addUpdateChapter() {
        $('#bookAddUpdateSpinner').show();
        chapterModel.BookId = bookId;
        chapterModel.ChapterTitle = $('#txtChapterTitle').val();
        chapterModel.ChapterOrder = $('#txtChapterOrder').val();
        chapterModel.Preface = $('#sectionEditor').summernote('code');

        if ($('#btnAddUpdateChapter').html() == "Add") {
            try {
                $.ajax({
                    type: "Post",
                    url: service + "/api/Chapter",
                    data: chapterModel,
                    success: function (chapterId) {
                        chapterModel.Id = chapterId;
                        $('#bookAddUpdateSpinner').hide();
                        displayStatusMessage("ok", chapterModel.ChapterTitle + " Added");
                        $('#crudTopBorderHeader').html("Chapter " + chapterModel.ChapterOrder + ".    " + chapterModel.ChapterTitle);
                        loadNestedList();
                    },
                    error: function (jqXHR, exception) {
                        $('#bookAddUpdateSpinner').hide();
                        alert("add chapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            } catch (e) {
                $('#bookAddUpdateSpinner').hide();
                alert("add chapter CATCH: " + e);
            }
        }
        if ($('#btnAddUpdateChapter').html() == "Update") {
            try {
                $.ajax({
                    type: "Put",
                    url: service + "/api/Chapter",
                    data: chapterModel,
                    success: function (success) {
                        if (success === "ok") {
                            displayStatusMessage("ok", chapterModel.ChapterTitle + " updated");
                            $('#bookAddUpdateSpinner').hide();
                            loadNestedList();
                        }
                        else {
                            $('#bookAddUpdateSpinner').hide();
                            alert("updateChapter: " + success);
                        }
                    },
                    error: function (jqXHR, exception) {
                        alert("update chapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            } catch (e) {
                alert("update Chapter CATCH: " + e);
            }
        }
    }
    function toggleNewChapter() {
        $('.allBookButtons').hide();
        $('.writeRow').hide();
        $('#chapterRow').show();
        $('#btnAddUpdateChapter').html("Add").show();
        // clear
        $('#crudTopBorderHeader').html("");
        $('#sectionEditor').summernote('code', "");
        $('#txtChapterTitle').val("");
        $('#txtChapterOrder').val("");
    }

    function loadSectionDetails(chapterId, sectionId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/BookSection/?sectionId=" + sectionId,
                success: function (section) {

                    $('#crudTopBorderHeader').html("Chapter " + section.ChapterOrder + ".    " + section.ChapterTitle);
                    sectionModel.Id = sectionId;
                    sectionModel.ChapterId = chapterId;
                    //alert("loadSectionDetails chapterId:" + sectionModel.ChapterId);
                    $('#txtSectionTitle').val(section.SectionTitle);
                    $('#txtSectionOrder').val(section.SectionOrder);
                    $('#sectionEditor').summernote('code', section.SectionContents);

                    $('.writeRow').hide();
                    $('#sectionRow').show();

                    $('.allBookButtons').hide();
                    $("#btnAddUpdateSection").html("Update").show();
                    $('#btnNewSection').show();
                    $('#btnNewSubSection').show();
                },
                error: function (jqXHR, exception) {
                    alert("loadSectionDetails XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("loadSectionDetails CATCH: " + e);
        }
    }
    function addUpdateSection() {
        $('#bookAddUpdateSpinner').show();
        sectionModel.SectionTitle = $('#txtSectionTitle').val();
        sectionModel.SectionOrder = $('#txtSectionOrder').val();
        sectionModel.SectionContents = $('#sectionEditor').summernote('code');
        try {
            if ($('#btnAddUpdateSection').html() == "Add") {
                $.ajax({
                    type: "POST",
                    url: service + "/api/BookSection/",
                    data: sectionModel,
                    success: function (sectionId) {
                        sectionModel.Id = sectionId;
                        displayStatusMessage("ok", sectionModel.SectionTitle + " Added");
                        $('#btnAddUpdateSection').html("Update");
                        $('#btnNewCancel').html("New");
                        $("#btnContinue").show();
                        $('#bookAddUpdateSpinner').hide();
                        loadNestedList();
                    },
                    error: function (jqXHR, exception) {
                        $('#bookAddUpdateSpinner').hide();
                        alert("addSection XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            }
            if ($('#btnAddUpdateSection').html() == "Update")
            {
                sectionModel.SectionTitle = $('#txtSectionTitle').val();
                sectionModel.SectionOrder = $('#txtSectionOrder').val();
                sectionModel.SectionContents = $('#sectionEditor').summernote('code');
                $.ajax({
                    type: "PUT",
                    url: service + "/api/BookSection/",
                    data: sectionModel,
                    success: function (success) {
                        $('#bookAddUpdateSpinner').hide();
                        if (success == "ok") {
                            displayStatusMessage("ok", sectionModel.SectionTitle + " Updated");
                            loadNestedList();
                        }
                        else
                            alert("success: " + success);
                    },
                    error: function (jqXHR, exception) {
                        $('#bookAddUpdateSpinner').hide();
                        alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            }
        } catch (e) {
            $('#bookAddUpdateSpinner').hide();
            alert("addSection CATCH: " + e);
        }
    }
    function toggleNewSection() {
        $('.allBookButtons').hide();
        $('#btnAddUpdateSection').html("Add").show();
        $('.writeRow').hide();
        $('#sectionRow').show();
        // clear gets
        sectionModel.Id = null;
        $('#sectionEditor').summernote('code', "");
        $('#txtSectionTitle').val("");
        $('#txtSectionOrder').val("");
    }

    function loadSubSectionDetails(subSectionId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/SubSection?subSectionId=" + subSectionId,
                success: function (subSection) {
                    if (subSection.success == "ok") {
                        $('#txtSubSectionTitle').val(subSection.SubSectionTitle);
                        $('#txtSubSectionOrder').val(subSection.SubSectionOrder);
                        $('#sectionEditor').summernote('code', subSection.SubSectionContents);
                        subSectionModel.Id = subSection.Id;
                        subSectionModel.ChapterTitle = subSection.ChapterTitle;
                        subSectionModel.ChapterOrder = subSection.ChapterOrder;
                        subSectionModel.SectionTitle = subSection.SectionTitle;
                        subSectionModel.SectionOrder = subSection.SectionOrder;
                        $('#crudTopBorderHeader').html("Chapter " + subSectionModel.ChapterOrder + ". " + subSectionModel.ChapterTitle +
                            "   Section " + subSectionModel.SectionOrder + ". " + subSectionModel.SectionTitle);

                        $('.writeRow').hide();
                        $('#subSectionRow').show();
                        $('.allBookButtons').hide();
                        $("#btnAddUpdateSubSection").html("Update").show();
                        $('#btnNewSubSection').show();
                    }
                    else
                        alert("loadSubSectionDetails: " + subSection.success)
                },
                error: function (jqXHR, exception) {
                    alert("loadSubSectionDetails XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("loadSubSectionDetails CATCH: " + e);
        }
    }
    function addUpdateSubSection() {
        $('#bookAddUpdateSpinner').show();
        subSectionModel.SectionId = sectionModel.Id;
        subSectionModel.SubSectionTitle = $('#txtSubSectionTitle').val();
        subSectionModel.SubSectionOrder = $('#txtSubSectionOrder').val();
        subSectionModel.SubSectionContents = $('#sectionEditor').summernote('code');
        if ($('#btnAddUpdateSubSection').html() == "Add") {
            try {
                $.ajax({
                    type: "POST",
                    url: service + "/api/SubSection/",
                    data: subSectionModel,
                    success: function (subSectionId) {
                        if (!subSectionId.startsWith("ERROR")) {
                            subSectionModel.Id = subSectionId;
                            displayStatusMessage("ok", subSectionModel.SubSectionTitle + " Added");
                            $('#btnAddUpdateSubSection').html("Update Subsection");
                            $('#btnNewSubSection').html("New Subsection").show();
                            loadNestedList();
                            $('#bookAddUpdateSpinner').hide();
                        }
                        else {
                            $('#bookAddUpdateSpinner').hide();
                            alert("addSection CATCH: " + e);
                        }
                    },
                    error: function (jqXHR, exception) {
                        alert("addSection XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            } catch (e) {
                $('#bookAddUpdateSpinner').hide();
                alert("addSection CATCH: " + e);
            }
        }
        if ($('#btnAddUpdateSubSection').html() == "Update") {
            try {
                $.ajax({
                    type: "PUT",
                    url: service + "/api/SubSection/",
                    data: subSectionModel,
                    success: function (success) {
                        if (success == "ok") {
                            displayStatusMessage("ok", subSectionModel.SubSectionTitle + " Updated");
                            loadNestedList();  //  now ensure visible the susbsection item ??
                            //loadSubSectionDetails(" + dbSubSection.Id + ")' >" +
                            $('#bookAddUpdateSpinner').hide();

                        }
                        else {
                            $('#bookAddUpdateSpinner').hide();
                            alert("UpdateSubSection PUT: " + success);
                        }
                    },
                    error : function (jqXHR, exception) {
                        $('#bookAddUpdateSpinner').hide();
                        alert("UpdateSubSection PUT XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            } catch (e) {
                $('#bookAddUpdateSpinner').hide();
                alert("UpdateSubSection PUT CATCH: " + e);
            }
        }
    }
    function toggleNewSubSection() {
        //alert("toggleNewSubSection: " + $('#btnNewSubSection').html())
        $('.allBookButtons').hide();
        $('#btnAddUpdateSubSection').show().html("Add");

        $('#crudTopBorderHeader').html("Chapter " + subSectionModel.ChapterOrder + ". " + subSectionModel.ChapterTitle +
            "   Section " + subSectionModel.SectionOrder + ". " + subSectionModel.SectionTitle);
        $('.writeRow').hide();
        $('#subSectionRow').show();
        // clear gets
        subSectionModel.Id = 0;
        $('#txtSubSectionTitle').val('');
        $('#txtSubSectionOrder').val('');
        $('#sectionEditor').summernote('code', "");
    }

    function loadNestedList() {
        try {
            $('#writeSectionsListLoadingGif').show();
            $.ajax({
                type: "get",
                url: service + "/api/BookDb/?bookId=" + bookId,
                success: function (book) {
                    bookModel.Id = book.Id;
                    bookModel.BookTitle = book.BookTitle;
                    $('#bookTitle').html(bookModel.BookTitle);
                    bookModel.Introduction = book.Introduction;
                    bookModel.Preface = book.Preface;
                    bookModel.Chapters = new Array();
                    $('#nestedBookChaptersList').html("<div class='nestedListBookItem nestedListItem' onclick='loadBookDetails()'>" + bookModel.BookTitle + "</div>");
                    $.each(book.Chapters, function (idx, dbChapter) {
                        var chapterModel = new Object();
                        chapterModel.Array = new Object();
                        chapterModel.Id = dbChapter.Id;
                        chapterModel.ChapterTitle = dbChapter.ChapterTitle;
                        chapterModel.ChapterOrder = dbChapter.ChapterOrder;
                        chapterModel.Preface = dbChapter.Preface;

                        var chapterLine = "<div class='chapterContainer nestedListItem'>"
                        chapterLine += "<div class='nestedListChapterItem' onclick='loadChapterDetails(" + dbChapter.Id + ")' >";
                        chapterLine += dbChapter.ChapterOrder + " | " + dbChapter.ChapterTitle + "</div>";
                        chapterLine += "<div class='dots' onclick='toggleNestedSection(" + dbChapter.Id + ")'></div>";
                        //chapterLine += "<div class='dots' onclick='$(#chapterContainer" + dbChapter.Id + ").slideToggle()'></div>";
                        chapterLine += "<div><img class='caret12' onclick='toggleNestedSection(" + dbChapter.Id + ")' src='/Images/caretDown.png'></div></div>";
                        //chapterLine += "<div><img class='caret12' onclick='$('#chapterContainer" + dbChapter.Id + "').slideToggle()' src='/Images/caretDown.png'></div></div>";
                        chapterLine += "<div id=chapterContainer" + dbChapter.Id + " class='collapsible' ></div>";
                        $('#nestedBookChaptersList').append(chapterLine);

                        $.each(dbChapter.Sections, function (idx, dbSection) {
                            var sectionModel = new Object();
                            sectionModel.SubSections = new Array();
                            sectionModel.Id = dbSection.Id;
                            sectionModel.SectionTitle = dbSection.SectionTitle;
                            sectionModel.SectionOrder = dbSection.SectionOrder;
                            sectionModel.SectionContents = dbSection.SectionContents;

                            var sectionLine = "<div class='chapterContainer nestedListItem'>"
                            sectionLine += "<div class='nestedListSectionItem' onclick='loadSectionDetails(" + dbChapter.Id + "," + dbSection.Id + ")'>";
                            sectionLine += dbSection.SectionOrder + " | " + dbSection.SectionTitle + "</div>";
                            sectionLine += "<div class='dots95' onclick='toggleNestedSUBSection(" + dbSection.Id + ")'></div>";
                            //sectionLine += "<div class='dots95' onclick='$('#sectionContainer" + dbSection.Id + "').slideToggle()'></div>";
                            sectionLine += "<div><img class='caret12' onclick='toggleNestedSUBSection(" + dbSection.Id + ")' src='/Images/caretDown.png'></div></div>";
                            //sectionLine += "<div><img class='caret12' onclick='$('#sectionContainer" + dbSection.Id + "').slideToggle()' src='/Images/caretDown.png'></div></div>";
                            sectionLine += "<div id=sectionContainer" + dbSection.Id + " class='collapsible' ></div>";
                            $('#chapterContainer' + dbChapter.Id + '').append(sectionLine);

                            $.each(dbSection.SubSections, function (idx, dbSubSection) {
                                var subSectionModel = new Object();
                                subSectionModel.Id = dbSubSection.Id;
                                subSectionModel.Contents = dbSubSection.SubSectionContents;
                                subSectionModel.Title = dbSubSection.SubSectionTitle;
                                subSectionModel.Order = dbSubSection.SubSectionOrder;

                                //$('#sectionContainer' + dbSection.Id + '').append("<div subSectionId=" + dbSubSection.Id + "' sectionId=" + dbSection.Id +
                                $('#sectionContainer' + dbSection.Id + '')
                                    .append("<div class='nestedListItem nestedListSubSectionItem' onclick='loadSubSectionDetails(" + dbSubSection.Id + ")' >" +
                                    dbSubSection.SubSectionOrder + " | " + dbSubSection.SubSectionTitle + "</div>");

                                //sectionModel.SubSections.push(subSectionModel);
                            });
                            //chapterModel.Sections.push(sectionModel);
                        });
                        // bookModel.Chapters.push(chapterModel);
                    });
                    resizePage();

                    $('#nestedBookChaptersList').resize(function () {
                        alert("$('#nestedBookChaptersList').resize()")
                    });


                    $('#writeSectionsListLoadingGif').hide();
                },
                error: function (jqXHR, exception) {
                    alert("loadNestedList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    $('#writeSectionsListLoadingGif').hide();
                }
            });
        } catch (e) {
            $('#writeSectionsListLoadingGif').hide();
            alert("loadNestedList CATCH: " + e);
        }
    }
    function toggleNestedSUBSection(sectionId) {
        $('#sectionContainer' + sectionId + '').slideToggle();
    }
    function toggleNestedSection(chapterId) {

        var tbefore = $('#nestedBookChaptersList').height();
        $('#chapterContainer' + chapterId + '').slideToggle('fast', function () {
            var tafter = $('#nestedBookChaptersList').height()
            //alert("$('#nestedBookChaptersList').resize() before: " + tbefore + "  after: " + tafter);
            //if (tafter > tbefore) {
                var mh = $('#middleColumn').height();
                $('#middleColumn').height(mh + (tafter - tbefore));
                resizePage();
            //}
        });        
    }

    function redirectToToC() {
        window.location.href = "/BookDb/Toc?book=" + bookId;
    }
    function redirectToEdit() {
        window.location.href = "/BookDb/Edit?book=" + bookId;
    }

</script>