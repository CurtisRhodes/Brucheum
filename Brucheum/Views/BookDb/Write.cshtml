@{
    ViewBag.Title = "Write";
}
<link href="~/Styles/crudEdit.css" rel="stylesheet" />

<style>
    .crudContainer {
        width: 100%;
    }
    .chapterNumberSize {
        width: 50px;
    }
    #txtSectionTitle {
        width: 70%;
        margin-bottom: 14px;
    }
    #sectionList {
        margin-top: 14px;
    }
    #subSectionRow {
        display: none;
        padding-bottom: 14px;
    }
    .threeColumnArray {
        /*background-image: url('../../Images/parchment01.jpg');
        background-repeat: no-repeat;
        background-size: 100%;*/
        background-color: #ddd69f;
    }
</style>
<div class="threeColumnArray">
    <div id="leftColumn"></div>
    <div id="middleColumn">
        <div id="bookTitle" class="pageTitle" onclick="javascript:redirectToToC()"></div>
        <div id="divStatusMessage"></div>
        <a class="crudBreadcrumb" href="javascript:redirectToEdit()">&#8592; chapters</a>
        <div class="crudContainer floatLeft">
            <div id="chapterCrudContainerTitle" class="crudContainerTitle">Chapters</div>
            <div id="sectionsCrudArea" class="crudArea">
                <div class="crudRow">
                    <div class="crudRowLabel">Section Number</div>
                    <input id="txtSectionOrder" class="roundedInput chapterNumberSize" />
                    <div class="crudRowLabel">Section Title</div>
                    <input id="txtSectionTitle" class="roundedInput" />
                </div>
                <div id="subSectionRow" class="crudRow">
                    <div class="crudRowLabel">SubSection Number</div>
                    <input id="txtSubSectionOrder" class="roundedInput chapterNumberSize" />
                    <div class="crudRowLabel">SubSection Title</div>
                    <input id="txtSubSectionTitle" class="roundedInput" />
                </div>
                <div id="sectionEditor" class="editorContainer">
                    @Html.Partial("_Editor")
                </div>
                <div>
                    <button id="btnAddUpdate" class="roundendButton" onclick="mediateAddUpdateBtn()">Add</button>
                    <button id="btnNewCancel" class="roundendButton" onclick="mediateNewCancelbtn()">Cancel</button>
                    <button id="btnContinue" class="roundendButton" onclick="mediateContinueBtn()">Add Subsection</button>
                </div>
                <div id="sectionList" class="crudList">
                    section list
                </div>
            </div>
        </div>
    </div>
    <div id="rightColumn"></div>
</div>


<script>
/// ready fire aim
/// set up an editor screen for sections and subsections
/// you have already picked the chapter -- or this could be a drop down
///
///
///
    var service = '@ViewBag.Service';
    var chapterId = '@ViewBag.ChapterId';
    var sectionModel = {};
    var bookId;
    sectionModel.Chapter = chapterId;
    var subSectionModel = {};

    $(document).ready(function () {
        setUpSummerNoteEditor();
        getChapter(chapterId);
        $('#chaptersCrudArea').height($('#bookCrudArea').height());
        $("#btnContinue").hide();
    })
    function setUpSummerNoteEditor() {
        $('#sectionEditor').summernote({
            height: 200,
            codemirror: { mode: "htmlmixed", theme: "monokai" },
            toolbar: [
                ['codeview'],
                ['style', ['bold', 'italic', 'underline', 'clear']],
                //['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontname', 'fontsize']],
                //['insert', ['picture', 'link', 'video', 'table', 'hr']],
                ['color', ['color']]
                //['para', ['ul', 'ol', 'paragraph']],
                //['height', ['height']]
            ]
        });
    }

    function mediateAddUpdateBtn() {
        if ($('#btnAddUpdate').html() == "Add Subsection") {
            addSubSection();
        }
        if ($('#btnAddUpdate').html() == "Update SubSection") {
            updateSubSection();
        }
        else {
            if ($('#btnAddUpdate').html() == "Add")
                addSection();
            else
                updateSection()
        }
    }
    function mediateNewCancelbtn() {
        // clear
        sectionModel.Id = null;
        $('#sectionEditor').summernote('code', "");
        $('#txtSectionTitle').val("");
        $('#txtSectionOrder').val("");
        if ($('#btnNewCancel').html() == "Cancel Subsection") {
            $('#subSectionRow').hide();
            $('#btnAddUpdate').html("Add");
            $('#btnNewCancel').html("Cancel");
            $("#btnContinue").hide();
        }
        else {
            if ($('#btnNewCancel').html() == "Cancel") {
                $('#btnAddUpdate').html("Add");
            }
            else {  //   btnNewCancel == "new"
                $('#btnAddUpdate').html("Add");
                $('#btnNewCancel').html("Cancel");
                $("#btnContinue").hide();
            }
        }
    }
    function mediateContinueBtn() {
        if ($('#btnContinue').html() == "Add Subsection") {
            $('#subSectionRow').show();
            $('#btnAddUpdate').html("Add Subsection");
            $('#btnNewCancel').html("Cancel Subsection");
            $("#btnContinue").hide();
            $('#sectionEditor').summernote('code', "");
        }        
        if ($('#btnContinue').html() == "Cancel Subsection") {
            sectionModel.Id = null;
            $('#sectionEditor').summernote('code', "");
            $('#txtSectionTitle').val("");
            $('#txtSectionOrder').val("");
            $('#txtSubSectionTitle').val("");
            $('#txtSubSectionOrder').val("");

            $('#subSectionRow').hide();
            $('#btnAddUpdate').html("Add");
            $('#btnNewCancel').html("Cancel");
            $("#btnContinue").hide();
        }
    }

    function getChapter(chapterId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/Chapter/?chapterId=" + chapterId,
                success: function (chapter) {
                    if (chapter.success == "ok") {
                        $('#bookTitle').html(chapter.BookTitle);
                        bookId = chapter.BookId;
                        $('#chapterCrudContainerTitle').html("Chapter " + chapter.ChapterOrder + ".    " + chapter.ChapterTitle);
                        loadSectionList();
                    }
                    else
                        alert("getChapter: " + chapter.success)
                },
                error: function (jqXHR, exception) {
                    alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("getChapter CATCH: " + e);
        }
    }

    function addSection() {
        try {
            sectionModel.SectionTitle = $('#txtSectionTitle').val();
            sectionModel.SectionOrder = $('#txtSectionOrder').val();
            sectionModel.SectionContents = $('#sectionEditor').summernote('code');
            $.ajax({
                type: "POST",
                url: service + "/api/BookSection/",
                data: sectionModel,
                success: function (sectionId) {
                    sectionModel.Id = sectionId;
                    displayStatusMessage("ok", sectionModel.SectionTitle + " Added");
                    $('#btnAddUpdate').html("Update");
                    $('#btnNewCancel').html("New");
                    $("#btnContinue").show();
                    loadSectionList();
                },
                error: function (jqXHR, exception) {
                    alert("addSection XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("addSection CATCH: " + e);
        }
    }

    function updateSection() {

        //alert("updateSection()")
        try {
            sectionModel.SectionTitle = $('#txtSectionTitle').val();
            sectionModel.SectionOrder = $('#txtSectionOrder').val();
            sectionModel.SectionContents = $('#sectionEditor').summernote('code');
            $.ajax({
                type: "PUT",
                url: service + "/api/BookSection/",
                data: sectionModel,
                success: function (success) {
                    if (success == "ok") {
                        displayStatusMessage("ok", sectionModel.SectionTitle + " Updated");
                        $('#btnAddUpdate').html("Update");
                        $('#btnNewCancel').html("New");
                        loadSectionList();
                    }
                    else
                        alert("success: " + success);
                },
                error: function (jqXHR, exception) {
                    alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("getChapter CATCH: " + e);
        }
    }

    function loadSectionList() {
        try {
            $.ajax({
                type: "get",
                url: service + "/api/BookSection/?chapterId=" + chapterId,
                success: function (sections) {
                    $('#sectionList').html("");
                    $.each(sections, function (idx, obj) {
                        $('#sectionList').append("<div id=" + obj.Id + " class='crudListItem' >" + obj.SectionOrder + " | " + obj.SectionTitle + "</div>");
                        $.each(obj.SubSections, function (idx, objs) {
                            $('#sectionList').append("<div id=" + objs.Id + " class='crudListSubItem' >" + objs.SubSectionOrder + " | " + objs.SubSectionTitle + "</div>");
                        })
                    })
                    $('.crudListItem').click(function () {
                        loadSectionDetails($(this).attr('id'));
                    })
                    $('.crudListSubItem').click(function () {
                        loadSubSectionDetails($(this).attr('id'));
                    })
                },
                error: function (jqXHR, exception) {
                    alert("loadSectionList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("loadSectionList CATCH: " + e);
        }
    }

    function loadSectionDetails(sectionId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/BookSection/?sectionId=" + sectionId,
                success: function (section) {
                    sectionModel.Id = sectionId;
                    $('#txtSectionTitle').val(section.SectionTitle);
                    $('#txtSectionOrder').val(section.SectionOrder);
                    $('#sectionEditor').summernote('code', section.SectionContents);

                    $("#btnAddUpdate").html("Update")
                    $('#btnNewCancel').html("New Section");
                    $('#subSectionRow').hide();
                    $("#btnContinue").html("Add Subsection").show();

                },
                error: function (jqXHR, exception) {
                    alert("loadSectionDetails XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("loadSectionDetails CATCH: " + e);
        }
    }

    function addSubSection() {
        try {
            subSectionModel.Section = sectionModel.Id;
            subSectionModel.SubSectionTitle = $('#txtSubSectionTitle').val();
            subSectionModel.SubSectionOrder = $('#txtSubSectionOrder').val();
            subSectionModel.SubSectionContents = $('#sectionEditor').summernote('code');
            
            $.ajax({
                type: "POST",
                url: service + "/api/SubSection/",
                data: subSectionModel,
                success: function (subSectionId) {
                    subSectionModel.Id = subSectionId;
                    displayStatusMessage("ok", subSectionModel.SubSectionTitle + " Added");
                    $('#btnAddUpdate').html("Update Subsection");
                    $('#btnNewCancel').html("New Subsection");
                    $("#btnContinue").html("Cancel Subsection").show();
                    loadSectionList();
                },
                error: function (jqXHR, exception) {
                    alert("addSection XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("addSection CATCH: " + e);
        }
    }

    function updateSubSection() {
        try {
            subSectionModel.SubSectionTitle = $('#txtSubSectionTitle').val();
            subSectionModel.SubSectionOrder = $('#txtSubSectionOrder').val();
            subSectionModel.SubSectionContents = $('#sectionEditor').summernote('code');
            //alert("subSectionModel.Id: " + subSectionModel.Id)
            $.ajax({
                type: "PUT",
                url: service + "/api/SubSection/",
                data: subSectionModel,
                success: function (success) {
                    if (success == "ok") {
                        displayStatusMessage("ok", subSectionModel.SubSectionTitle + " Updated");
                        $('#btnAddUpdate').html("Update Subsection");
                        $('#btnNewCancel').html("New Subsection");
                        $("#btnContinue").html("Cancel Subsection").show();
                        loadSectionList();
                    }
                    else
                        alert("success: " + success);
                },
                error: function (jqXHR, exception) {
                    alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("getChapter CATCH: " + e);
        }
    }

    function loadSubSectionDetails(subSectionId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/SubSection?subSectionId=" + subSectionId,
                success: function (subSection) {
                    $('#subSectionRow').show();
                    $('#txtSubSectionTitle').val(subSection.SubSectionTitle);
                    $('#txtSubSectionOrder').val(subSection.SubSectionOrder);
                    $('#sectionEditor').summernote('code', subSection.SubSectionContents);

                    subSectionModel.Id = subSection.Id;
                    $('#txtSectionTitle').val(subSection.SectionTitle);
                    $('#txtSectionOrder').val(subSection.SectionOrder);

                    $('#btnAddUpdate').html("Update SubSection");
                    $('#btnNewCancel').html("New SubSection");
                    $('#btnContinue').html("Cancel Subsection").show();
                },
                error: function (jqXHR, exception) {
                    alert("loadSubSectionDetails XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("loadSubSectionDetails CATCH: " + e);
        }
    }

    function redirectToToC() {
        window.location.href = "/BookDb/Toc?book=" + bookId;
    }
    function redirectToEdit() {
        window.location.href = "/BookDb/Edit?book=" + bookId;
    }

</script>