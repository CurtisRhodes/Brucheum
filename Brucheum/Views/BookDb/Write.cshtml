@{
    ViewBag.Title = "Write";
}
<link href="~/Styles/crudEdit.css" rel="stylesheet" />

<style>
    .crudContainer {
        width: 100%;
    }
    .chapterNumberSize {
        width: 50px;
    }
    #txtSectionTitle {
        width: 70%;
        margin-bottom: 14px;
    }

    .nestedList {
        height: 400px;
        overflow-y: auto;
    }

    #sectionList {
        margin-top: 14px;
    }
    #subSectionRow {
        display: none;
        padding-bottom: 14px;
    }
    .threeColumnArray {
        /*background-image: url('../../Images/parchment01.jpg');
        background-repeat: no-repeat;
        background-size: 100%;*/
        background-color: #ddd69f;
    }
    .bookSectionSpinnerOffset {
        top: 10px;
        left: 30px;
    }
    .nestedListItem {
        padding: 4px;
        cursor: pointer;
        margin-bottom: 5px;
        background-color: #74bac3;
        border-radius: 5px;
    }

    .nestedListChapterItem {
        font-weight: bold;
        padding-left: 8px;
    }
    .nestedListSectionItem {
        padding-left: 50px;
    }
    .nestedListSubSectionItem {
        padding-left: 100px;
    }
</style>

<div class="threeColumnArray">
    <div id="leftColumn"></div>
    <div id="middleColumn">
        <div id="bookTitle" class="pageTitle" onclick="redirectToToC()"></div>
        <div id="divStatusMessage"></div>
        <a class="crudBreadcrumb" href="javascript:redirectToEdit()">&#8592; chapters</a>
        <div class="crudContainer floatLeft">
            <div id="chapterCrudContainerTitle" class="crudContainerTitle">Chapters</div>
            <div id="sectionsCrudArea" class="crudArea">
                <div class="crudRow">
                    <div class="crudRowLabel">Section Number</div>
                    <input id="txtSectionOrder" class="roundedInput chapterNumberSize" />
                    <div class="crudRowLabel">Section Title</div>
                    <input id="txtSectionTitle" class="roundedInput" />
                </div>
                <div id="subSectionRow" class="crudRow">
                    <div class="crudRowLabel">SubSection Number</div>
                    <input id="txtSubSectionOrder" class="roundedInput chapterNumberSize" />
                    <div class="crudRowLabel">SubSection Title</div>
                    <input id="txtSubSectionTitle" class="roundedInput" />
                </div>
                <div id="sectionEditor" class="editorContainer">
                    @Html.Partial("_Editor")
                </div>
                <div>
                    <img id="bookSectionSpinner" class="btnSpinnerImage bookSectionSpinnerOffset" src="~/Images/loader.gif" />
                    <button id="btnAddUpdateSection" class="roundendButton" onclick="addUpdateSection()">Add</button>
                    <button id="btnNewSection" class="roundendButton" onclick="toggleNewSection()">New Section</button>
                    <button id="btnAddUpdateSubSection" class="roundendButton" onclick="addUpdateSubSection()">New Subsection</button>
                    <button id="btnNewSubSection" class="roundendButton" onclick="toggleNewSubSection()">New Subsection</button>
                </div>
                <div>
                    <div id="writeSectionsListLoadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
                    <div id="nestedBookChaptersList" class="crudList nestedList"></div>
                </div>
                <div id="sectionList" class="crudList">
                    <div id="writeSectionsListLoadingGif" class="loadingGif"><img src="~/Images/loader.gif" /></div>
                </div>
            </div>
        </div>
    </div>
    <div id="rightColumn"></div>
</div>


<script>
/// ready fire aim
/// set up an editor screen for sections and subsections
/// you have already picked the chapter -- or this could be a drop down
///
///
///
    var service = '@ViewBag.Service';
    var chapterId = '@ViewBag.ChapterId';
    var bookId = 1;

    var bookModel = {};

    $(document).ready(function () {
        if (chapterId == null) {
            window.location.href = "/BookDb"
        }

        $('#btnNewSection').hide();
        $('#btnNewSubSection').hide();
        $('#btnAddUpdateSubSection').hide();

        setUpSummerNoteEditor();

        loadNestedList();

        //getChapter(chapterId);
        $('#chaptersCrudArea').height($('#bookCrudArea').height());
        $("#btnContinue").hide();
    })

    function setUpSummerNoteEditor() {
        $('#sectionEditor').summernote({
            height: 200,
            codemirror: { mode: "htmlmixed", theme: "monokai" },
            toolbar: [
                ['codeview'],
                ['style', ['bold', 'italic', 'underline', 'clear']],
                //['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontname', 'fontsize']],
                //['insert', ['picture', 'link', 'video', 'table', 'hr']],
                ['color', ['color']]
                //['para', ['ul', 'ol', 'paragraph']],
                //['height', ['height']]
            ]
        });
    }

    function addUpdateSection() {
       
        $('#bookSectionSpinner').show();

        sectionModel.SectionTitle = $('#txtSectionTitle').val();
        sectionModel.SectionOrder = $('#txtSectionOrder').val();
        sectionModel.SectionContents = $('#sectionEditor').summernote('code');
        try {
            if ($('#btnAddUpdateSection').html() == "Add") {
                $.ajax({
                    type: "POST",
                    url: service + "/api/BookSection/",
                    data: sectionModel,
                    success: function (sectionId) {
                        sectionModel.Id = sectionId;
                        displayStatusMessage("ok", sectionModel.SectionTitle + " Added");
                        $('#btnAddUpdateSection').html("Update");
                        $('#btnNewCancel').html("New");
                        $("#btnContinue").show();
                        loadSectionList();
                        $('#bookSectionSpinner').hide();
                    },
                    error: function (jqXHR, exception) {
                        $('#bookSectionSpinner').hide();
                        alert("addSection XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            }
            if ($('#btnAddUpdateSection').html() == "Update")
            {
                sectionModel.SectionTitle = $('#txtSectionTitle').val();
                sectionModel.SectionOrder = $('#txtSectionOrder').val();
                sectionModel.SectionContents = $('#sectionEditor').summernote('code');
                $.ajax({
                    type: "PUT",
                    url: service + "/api/BookSection/",
                    data: sectionModel,
                    success: function (success) {
                        $('#bookSectionSpinner').hide();
                        if (success == "ok") {
                            displayStatusMessage("ok", sectionModel.SectionTitle + " Updated");
                            loadSectionList();
                        }
                        else
                            alert("success: " + success);
                    },
                    error: function (jqXHR, exception) {
                        $('#bookSectionSpinner').hide();
                        alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
            }
        } catch (e) {
            $('#bookSectionSpinner').hide();
            alert("addSection CATCH: " + e);
        }
    }
    
    function toggleNewSection() {
        // clear
        sectionModel.Id = null;
        $('#sectionEditor').summernote('code', "");
        $('#txtSectionTitle').val("");
        $('#txtSectionOrder').val("");
        $('#btnAddUpdateSection').html("Add");
        $('#btnNewSection').hide();
        $('#btnAddUpdateSubSection').hide();
        $('#btnNewSubSection').hide();
    }

    function addUpdateSubSection() {
        if ($('#btnAddUpdateSubSection').html() == "New Subsection") {
            $('#subSectionRow').show();
            $('#btnNewSection').hide()
            $('#btnAddUpdateSection').hide()
            $('#btnNewSubSection').html("Cancel")
            $('#btnNewSubSection').show()
            $('#btnAddUpdateSubSection').html("Save Subsection")
            // clear gets
            $('#sectionEditor').summernote('code', "");
            //$('#txtSectionTitle').val("");
            //$('#txtSectionOrder').val("");
            $('#txtSubSectionTitle').val("");
            $('#txtSubSectionOrder').val("");
        }
        else {
            subSectionModel.Section = sectionModel.Id;
            subSectionModel.SubSectionTitle = $('#txtSubSectionTitle').val();
            subSectionModel.SubSectionOrder = $('#txtSubSectionOrder').val();
            subSectionModel.SubSectionContents = $('#sectionEditor').summernote('code');
            if ($('#btnAddUpdateSubSection').html() == "Save Subsection") {
                try {
                    $.ajax({
                        type: "POST",
                        url: service + "/api/SubSection/",
                        data: subSectionModel,
                        success: function (subSectionId) {
                            subSectionModel.Id = subSectionId;
                            displayStatusMessage("ok", subSectionModel.SubSectionTitle + " Added");
                            $('#btnAddUpdateSubSection').html("Update Subsection");
                            $('#btnNewSubSection').html("New Subsection").show();
                            loadSectionList();
                        },
                        error: function (jqXHR, exception) {
                            alert("addSection XHR error: " + getXHRErrorDetails(jqXHR, exception));
                        }
                    });
                } catch (e) {
                    alert("addSection CATCH: " + e);
                }
            }
            if ($('#btnAddUpdateSubSection').html() == "Update SubSection") {
                try {
                $.ajax({
                    type: "PUT",
                    url: service + "/api/SubSection/",
                    data: subSectionModel,
                    success: function (success) {
                        if (success == "ok") {
                            displayStatusMessage("ok", subSectionModel.SubSectionTitle + " Updated");
                            loadSectionList();
                        }
                        else
                            alert("success: " + success);
                    },
                    error: function (jqXHR, exception) {
                        alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    }
                });
                } catch (e) {
                    alert("updateSection CATCH: " + e);
                }
            }
        }
    }

    function toggleNewSubSection() {
        if ($('#btnNewSubSection').html() == "Cancel") {
            // go back to section
            //alert("sectionModel.Id :" + sectionModel.Id)
            loadSectionDetails(sectionModel.Id);
        }
        if ($('#btnNewSubSection').html() == "New SubSection") {
            $('#txtSubSectionTitle').val('');
            $('#txtSubSectionOrder').val('');
            $('#sectionEditor').summernote('code', "");
            $('#btnAddUpdateSubSection').show().html("Add");
            $('#btnNewSubSection').html("Cancel");
        }
    }

    function getChapter(chapterId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/Chapter/?chapterId=" + chapterId,
                success: function (chapter) {
                    if (chapter.success == "ok") {
                        $('#bookTitle').html(chapter.BookTitle);
                        bookId = chapter.BookId;
                        $('#chapterCrudContainerTitle').html("Chapter " + chapter.ChapterOrder + ".    " + chapter.ChapterTitle);
                        loadSectionList();
                    }
                    else
                        alert("getChapter: " + chapter.success)
                },
                error: function (jqXHR, exception) {
                    alert("getChapter XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("getChapter CATCH: " + e);
        }
    }

    function loadNestedList() {
        try {
            $('#writeSectionsListLoadingGif').show();
            $.ajax({
                type: "get",
                url: service + "/api/BookDb/?bookId=" + bookId,
                success: function (book) {

                    bookModel.Id = book.Id;
                    bookModel.BookTitle = book.BookTitle;
                    bookModel.Introduction = book.Introduction;
                    bookModel.Preface = book.Preface;
                    bookModel.Chapters = new Array();
                    //$('#nestedBookChaptersList').append("<div id=" + objs.Id + " class='crudListSubItem' >" + objs.SubSectionOrder + " | " + objs.SubSectionTitle + "</div>");
                    $('#nestedBookChaptersList').html("");

                    $.each(book.Chapters, function (idx, dbChapter) {
                        var chapterModel = new Object();
                        chapterModel.Array = new Object();
                        chapterModel.Id = dbChapter.Id;
                        chapterModel.ChapterTitle = dbChapter.ChapterTitle;
                        chapterModel.ChapterOrder = dbChapter.ChapterOrder;
                        chapterModel.Preface = dbChapter.Preface;
                        $('#nestedBookChaptersList').append("<div chapterId=" + dbChapter.Id + " class='nestedListItem nestedListChapterItem' >" +
                            dbChapter.ChapterOrder + " | " + dbChapter.ChapterTitle + "</div><div id='chapterContainer" + dbChapter.Id + "' class='collapsible' ></div>");

                        $.each(dbChapter.Sections, function (idx, dbSection) {
                            var sectionModel = new Object();
                            sectionModel.SubSections = new Array();
                            sectionModel.Id = dbSection.Id;
                            sectionModel.SectionTitle = dbSection.SectionTitle;
                            sectionModel.SectionOrder = dbSection.SectionOrder;
                            sectionModel.SectionContents = dbSection.SectionContents;
                            $('#chapterContainer' + dbChapter.Id + '').append("<div sectionId" + dbSection.Id + " chapter=" + dbChapter.Id + " class='nestedListItem nestedListSectionItem' >"
                                + dbSection.SectionOrder + " | " + dbSection.SectionTitle + "</div><div id='sectionContainer" + dbSection.Id + "' class='collapsible' ></div>");

                            $.each(dbSection.SubSections, function (idx, dbSubSection) {
                                var subSectionModel = new Object();
                                subSectionModel.Id = dbSubSection.Id;
                                subSectionModel.Contents = dbSubSection.SubSectionContents;
                                subSectionModel.Title = dbSubSection.SubSectionTitle;
                                subSectionModel.Order = dbSubSection.SubSectionOrder;

                                //alert("c: " + dbChapter.ChapterTitle + "s: " + sectionModel.SectionTitle + "  ss: " + dbSubSection.SubSectionTitle)

                                $('#sectionContainer' + dbSection.Id + '').append("<div id='subSection" + dbSubSection.Id + "' section='" +
                                    dbSection.Id + "' class='nestedListItem nestedListSubSectionItem' >" + dbSubSection.SubSectionOrder + " | " + dbSubSection.SubSectionTitle + "</div>");
                                //sectionModel.SubSections.push(subSectionModel);
                            });
                        });
                        //chapterModel.Sections.push(sectionModel);
                    });
                    // bookModel.Chapters.push(chapterModel);

                    $('.nestedListChapterItem').click(function () {
                        $('#chapterContainer' + $(this).attr("chapterId") + '').slideToggle();
                        //loadSectionDetails($(this).attr('id'));
                    })                    

                    $('.nestedListSectionItem').click(function () {
                        alert("nestedListSectionItem click sectionId: " + $(this).attr("sectionId"))


                        $('#sectionContainer' + $(this).attr("sectionId") + '').slideToggle();
                    })




                    $('.nestedListSubSectionItem').click(function () {
                        $('#sectionContainer' + $(this).attr("id") + '').slideToggle();
                    })

                    $('#writeSectionsListLoadingGif').hide();
                },
                error: function (jqXHR, exception) {
                    alert("loadSectionList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    $('#writeSectionsListLoadingGif').hide();
                }
            });
        } catch (e) {
            $('#writeSectionsListLoadingGif').hide();
            alert("loadSectionList CATCH: " + e);
        }
    }


    function loadSectionList() {
        try {
            $('#writeSectionsListLoadingGif').show();
            $.ajax({
                type: "get",
                url: service + "/api/BookSection/?chapterId=" + chapterId,
                success: function (sections) {
                    $('#writeSectionsListLoadingGif').hide();
                    $('#sectionList').html("");
                    $.each(sections, function (idx, obj) {
                        $('#sectionList').append("<div id=" + obj.Id + " class='crudListItem' >" + obj.SectionOrder + " | " + obj.SectionTitle + "</div>");
                        $.each(obj.SubSections, function (idx, objs) {
                            $('#sectionList').append("<div id=" + objs.Id + " class='crudListSubItem' >" + objs.SubSectionOrder + " | " + objs.SubSectionTitle + "</div>");
                        })
                    })
                    $('.crudListItem').click(function () {
                        loadSectionDetails($(this).attr('id'));
                    })
                    $('.crudListSubItem').click(function () {
                        loadSubSectionDetails($(this).attr('id'));
                    })
                },
                error: function (jqXHR, exception) {
                    alert("loadSectionList XHR error: " + getXHRErrorDetails(jqXHR, exception));
                    $('#writeSectionsListLoadingGif').hide();
                }
            });
        } catch (e) {
            $('#writeSectionsListLoadingGif').hide();
            alert("loadSectionList CATCH: " + e);
        }
    }
    function loadSectionDetails(sectionId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/BookSection/?sectionId=" + sectionId,
                success: function (section) {
                    sectionModel.Id = sectionId;
                    $('#txtSectionTitle').val(section.SectionTitle);
                    $('#txtSectionOrder').val(section.SectionOrder);
                    $('#sectionEditor').summernote('code', section.SectionContents);

                    $('#subSectionRow').hide();
                    $("#btnAddUpdateSection").html("Update").show();
                    $('#btnNewSection').show();
                    $('#btnAddUpdateSubSection').html("New Subsection").show();
                    $('#btnNewSubSection').hide();
                },
                error: function (jqXHR, exception) {
                    alert("loadSectionDetails XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("loadSectionDetails CATCH: " + e);
        }
    }
    function loadSubSectionDetails(subSectionId) {
        try {
            $.ajax({
                type: "PATCH",
                url: service + "/api/SubSection?subSectionId=" + subSectionId,
                success: function (subSection) {
                    $('#subSectionRow').show();
                    $('#txtSubSectionTitle').val(subSection.SubSectionTitle);
                    $('#txtSubSectionOrder').val(subSection.SubSectionOrder);
                    $('#sectionEditor').summernote('code', subSection.SubSectionContents);

                    subSectionModel.Id = subSection.Id;
                    $('#txtSectionTitle').val(subSection.SectionTitle);
                    $('#txtSectionOrder').val(subSection.SectionOrder);

                    $('#btnAddUpdateSubSection').show().html("Update SubSection");
                    $('#btnAddUpdateSection').hide();
                    $('#btnNewSection').hide();
                    $('#btnNewSubSection').show().html("New SubSection");;
                },
                error: function (jqXHR, exception) {
                    alert("loadSubSectionDetails XHR error: " + getXHRErrorDetails(jqXHR, exception));
                }
            });
        } catch (e) {
            alert("loadSubSectionDetails CATCH: " + e);
        }
    }

    function redirectToToC() {
        window.location.href = "/BookDb/Toc?book=" + bookId;
    }
    function redirectToEdit() {
        window.location.href = "/BookDb/Edit?book=" + bookId;
    }

</script>